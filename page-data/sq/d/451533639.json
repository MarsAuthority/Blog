{"data":{"allMdx":{"nodes":[{"fields":{"slug":"/placeholder/","title":"This Is a Placeholder File for Mdx"},"frontmatter":{"draft":true},"rawBody":"---\ntitle: This Is a Placeholder File for Mdx\ndraft: true\ntags:\n  - gatsby-theme-primer-wiki-placeholder\n---\n"},{"fields":{"slug":"/","title":"关于这个站点"},"frontmatter":{"draft":false},"rawBody":"---\r\n\r\n---\r\n\r\n# 关于这个站点\r\n\r\n**👋Another Foam template that use [gatsby-theme-primer-wiki](https://github.com/theowenyoung/gatsby-theme-primer-wiki), Welcome to your new Foam Knowledge Base!**\r\n\r\n## Examples\r\n\r\n- [Demo](https://demo-wiki.owenyoung.com) - ([Source](https://github.com/theowenyoung/gatsby-theme-primer-wiki/tree/main/example))\r\n- [Everything I Know by Owen](https://wiki.owenyoung.com/) - ([Source](https://github.com/theowenyoung/wiki))\r\n- [Foam Demo](https://demo-foam.owenyoung.com/) - ([Source](https://github.com/theowenyoung/foam-template-gatsby-theme-primer-wiki))\r\n- [Obsidian Demo](https://demo-obsidian.owenyoung.com/) - ([Source](https://github.com/theowenyoung/obsidian-template-gatsby-theme-primer-wiki))\r\n- [Gatsby Starter Demo](https://demo-gatsby-starter-primer-wiki.owenyoung.com/) - ([Source](https://github.com/theowenyoung/gatsby-starter-primer-wiki))\r\n\r\n## Features\r\n\r\n- Support Local search, full-text search.\r\n- Support Graph Visualisation with canvas.\r\n- Support Tags, Tags First, Generating tag pages, also connecting with graph visualisation.\r\n- Support [Gitbook](https://docs.gitbook.com/integrations/github/content-configuration#summary) styled `SUMMARY.md` for custom sidebar.\r\n- Support `[[WikiLink]]`, But you'd better use [Link Reference Definitions](https://foambubble.github.io/foam/features/link-reference-definitions) with extensions, `\"foam.edit.linkReferenceDefinitions\": \"withExtensions\"`\r\n- Support Light/Dark Theme\r\n- Custom Header Nav Items\r\n- Nested sidebar\r\n- Support Google Analytics\r\n- Support Sitemap/Robot\r\n- SEO optimization\r\n- Support path prefix\r\n\r\n## Principles\r\n\r\nHere are my main ideas/principles in designing this theme.\r\n\r\n1. No vendor lock-in. The less vendor features you use, the better you'll be able to migrate. `[[Wikilink]]` is the only non-markdown feature supported by default, but nonetheless, it is recommended to use the standard markdown syntax, or if you edit with [Foam](https://github.com/foambubble/foam), please use [Wikilink](https://foambubble.github.io/foam/wikilinks) with [Link Reference Definitions](https://foambubble.github.io/foam/features/link-reference-definitions). That give us the capability change our theme, or hosted place.\r\n2. Use meta data instead of special characters. We should use `tags` as the document's metadata, not `#tag` in the plain text.\r\n3. Use tags instead of categories. Minimal subfolders.\r\n\r\n## Getting started\r\n\r\n### For new wiki\r\n\r\nThis documentation assumes that you have a GitHub account and have [Visual Studio Code](https://code.visualstudio.com/) installed on your Linux/MacOS/Windows machine.\r\n\r\n1. If you haven't yet, browse over to the main [Foam documentation](https://foambubble.github.io/foam) to get an idea of what Foam is and how to use it.\r\n2. Press \"Use this template\" button at [foam-template-gatsby-theme-primer-wiki](https://github.com/theowenyoung/foam-template-gatsby-theme-primer-wiki/generate) (that's this repository!) to fork it to your own GitHub account. If you want to keep your thoughts to yourself, remember to set the repository private.\r\n3. [Clone the repository to your local machine](https://help.github.com/en/github/creating-cloning-and-archiving-repositories/cloning-a-repository) and open it in VS Code.\r\n\r\n   _Open the repository as a folder using the `File > Open...` menu item._\r\n\r\n4. When prompted to install recommended extensions, click **Install all** (or **Show Recommendations** if you want to review and install them one by one)\r\n5. Delete all `.md` files you don't need, Change Site settings at `.layouts/gatsby-config.js`, change your CNAME at `.layouts/static/CNAME`, change your icon at `.layouts/static/logo.png`, commit your changes, and push to github, change your page settings at Github, make sure you set the page branch to `gh-pages`, then when github actions runed, you can visit your site.\r\n\r\nAfter setting up the repository, head to [[getting-started]] to get familiar with your new knowledge base!\r\n\r\nTo learn more about how to use **Foam**, read the [Recipes](https://foambubble.github.io/foam/recipes/recipes) bubbles of the Foam documentation workspace.\r\n\r\nAnd remember that you can always join our [Foam community on Discord](https://foambubble.github.io/join-discord/g)!\r\n\r\n### For exist wiki\r\n\r\n### Exist Wiki\r\n\r\n1. Clone this repo to your local machine\r\n\r\n```bash\r\ngit clone https://github.com/theowenyoung/foam-template-gatsby-theme-primer-wiki.git\r\n```\r\n\r\n2. Copy `.layouts`, `.github` `.gitignore` to your wiki folder.\r\n\r\n## Config\r\n\r\nSee [here](https://github.com/theowenyoung/gatsby-theme-primer-wiki#usage)\r\n\r\n## Local Preview\r\n\r\n```bash\r\ncd .layouts\r\nnpm i\r\nnpm start\r\n```\r\n\r\n\r\n## Deploy\r\n\r\nDeploy to Github Pages, see `.github/workflows/deploy.yml`,\r\n\r\n### Path Prefix\r\n\r\nIf you want deploy your site with prefix path, \r\n\r\n1. change `gatsby-config.js` with:\r\n\r\n```javascript\r\nmodule.exports = {\r\n  pathPrefix: `/blog`,\r\n}\r\n```\r\n\r\n2. set your build script with `gatsby build --prefix-paths`,\r\n\r\n\r\n3. Local Preview with `gatsby serve --prefix-paths`\r\n\r\n\r\nAlso see the original docs: <https://www.gatsbyjs.com/docs/how-to/previews-deploys-hosting/path-prefix/#add-to-gatsby-configjs>\r\n\r\n## Using Foam\r\n\r\nWe've created a few Bubbles (markdown documents) to get you started.\r\n\r\n- [[inbox]] - a place to write down quick notes to be categorized later\r\n- [[getting-started]] - learn how to use your Foam workspace\r\n- [[todo]] - a place to keep track of things to do\r\n\r\nIn the `docs` directory you can find everything you need to learn the basics of Foam.\r\n\r\n\r\n"},{"fields":{"slug":"/安全知识库/Blue Team基础设施/Web应用防火墙/WAF能力评估&测试/","title":"WAF能力评估&测试"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: WAF能力评估&测试\r\ntags:\r\n- Blue Team基础设施\r\n- Web应用防火墙\r\n- 能力评估\r\n---\r\n\r\n# 1. 评估工具\r\nWAF能力评估工具在业界都比较少见，为数不多的几个还是由WAF供应商开发的，如：\r\n\r\n- **Framework for Testing WAFs (FTW!) (https://github.com/fastly/ftw)**，由 ModSecurity 和 Fastly 的研究人员创建，旨在帮助为 WAF 规则提供严格的测试。它使用 OWASP Core Ruleset V3 作为基线来测试 WAF 上的规则。规则集中的每个规则都加载到一个 YAML 文件中，该文件发出将触发这些规则的 HTTP 请求。\r\n- **GoTestWAF(https://github.com/wallarm/gotestwaf)**，由另一家 WAF 供应商 Wallarm 负责维护。GoTestWAF 使用 YAML 来定义多个测试，这些测试使用不同的有效载荷变体、绕过技术、编码以及有效载荷插入点（包括模拟 API 调用的 JSON 结构）。 本文使用GoTestWAF进行测试。\r\n- **WAFLab(https://github.com/microsoft/waflab)**，微软出品，使用 YAML 来定义多个测试用例，默认使用modsecurity的规则进行验证。\r\n\r\n# 2. GoTestWAF 如何工作？\r\nGoTestWAF 生成具有预定义的基本有效负载的请求以及特定于不同 API（REST、SOAP、XMLRPC）的攻击。之后，它将它们发送到应用程序并分析响应以在控制台输出中生成详细报告或作为 PDF。\r\n\r\n主要测试思路是将攻击载荷编码并放置在 HTTP 请求的不同部分：其正文、标头、URL 参数等。为了简化，实现了以下逻辑：\r\n\r\n- **有效载荷 → 编码器 → 占位符**\r\n\r\n这意味着每个负载样本（恶意攻击样本，例如像“alert(1)”这样的 XSS 字符串）将首先以某种方式编码，然后放入 HTTP 请求中。还可以选择使用保持字符串原样的普通编码器。\r\n\r\n为了使测试可读，GoTestWAF 使用 YAML DSL。以下是 SQL 注入负载的示例：\r\n\r\n```\r\npayload:\r\n  '\"union select -7431.1, name, @aaa from u_base--w-'\r\n  \"'or 123.22=123.22\"\r\n  \"' waitfor delay '00:00:10'--\"\r\n  \"')) or pg_sleep(5)--\"\r\nencoder:\r\n  Base64Flat\r\n  Url  \r\nplaceholder:\r\n  UrlPath\r\n  UrlParam\r\n  JsonBody\r\n  Header\r\n```\r\n\r\n作为每 4 个有效载荷、2 个编码器和 4 个占位符的排列结果，本次测试将发送 424=32 个请求。\r\n\r\n# 3. WAFLab 是怎样的？\r\n使用AutoGen模块自动生成测试用例，大体思路和GoTestWAF差不多，值得一提的是，它会从Mod Security的规则中提取信息，不过整体数量还是蛮少的：\r\n\r\n| TYPE                                | Total Rule | Supported Rule | Passed Rule |\r\n| ----------------------------------- | ---------- | -------------- | ----------- |\r\n| METHOD-ENFORCEMENT                  | 1          | 0              | 0           |\r\n| SCANNER_DETECTION                   | 5          | 5              | 5           |\r\n| PROTOCOL-ENFORCEMENT                | 39         | 19             | 10          |\r\n| PROTOCOL-ATTACK                     | 7          |                |             |\r\n| APPLICATION-ATTACK-LFI              | 4          |                |             |\r\n| APPLICATION-ATTACK-RFI              | 4          |                |             |\r\n| APPLICATION-ATTACK-RCE              | 20         |                |             |\r\n| APPLICATION-ATTACK-PHP              | 14         |                |             |\r\n| APPLICATION-ATTACK-NODEJS           | 1          |                |             |\r\n| APPLICATION-ATTACK-XSS              | 30         |                |             |\r\n| APPLICATION-ATTACK-SQLi             | 41         |                |             |\r\n| APPLICATION-ATTACK-SESSION-FIXATION | 3          |                |             |\r\n| APPLICATION-ATTACK-JAVA             | 3          |                |             |\r\n\r\n生成的测试用例格式如下：\r\n\r\n```yaml\r\n  meta:\r\n    author: Microsoft\r\n    enabled: true\r\n    name: dev-933140.yaml\r\n    description: This YAML file is automatically generated by WAFLab AutoGen\r\n  tests:\r\n  - test_title: 933140-0\r\n    desc: REQUEST_COOKIES\r\n    stages:\r\n    - stage:\r\n        input:\r\n          stop_magic: true\r\n          dest_addr: 127.0.0.1\r\n          method: GET\r\n          port: 80\r\n          protocol: http\r\n          uri: /\r\n          version: HTTP/1.0\r\n          headers:\r\n            Cookie: O09SFeTTuD=PHP://TEMP\r\n            Host: wafdefaultruleset20.waftestdf.azfdtest.xyz\r\n        output:\r\n          status:\r\n          - 403\r\n```\r\n\r\n# 4. 参考资料\r\n- [gotestwaf/README.md at master · wallarm/gotestwaf (github.com)](https://github.com/wallarm/gotestwaf/blob/master/README.md)\r\n- [waflab/autogen at master · microsoft/waflab (github.com)](https://github.com/microsoft/waflab/tree/master/autogen)"},{"fields":{"slug":"/安全知识库/Blue Team基础设施/Web应用防火墙/通过机器学习改善 WAF/","title":"WAF能力评估&测试"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: WAF能力评估&测试\r\ntags:\r\n- Blue Team基础设施\r\n- Web应用防火墙\r\n- 机器学习\r\n- Cloudflare\r\n---\r\n\r\n# 1. 背景\r\nCloudflare 每秒处理3200 万次 HTTP 请求，22% web 服务器为 [W3Techs](https://w3techs.com/technologies/details/ws-cloudflare) 所知的网站使用 Cloudflare。Cloudflare 为五分之一的互联网资产保护其流量，因而具备独特的优势，得以在威胁出现时就加以识别，并跟踪其进化和变异。\r\n\r\nWeb 应用程序防火墙（WAF）处于 Cloudflare 安全工具箱的核心位置，而托管规则是 [WAF](https://www.cloudflare.com/zh-cn/learning/ddos/glossary/web-application-firewall-waf/) 的关键功能。托管规则是 Cloudflare 分析师团队创建的一组规则，用于阻止显示已知攻击模式的请求。这些托管规则攻击对于现有攻击手段的模式非常有效，因为它们已经过广泛测试，能最大限度减少误报。托管规则的不足之处是，常常会错过攻击的变体（也称为绕过），因为基于静态正则表达式的规则本质上对引入的特征变体（如通过模糊技术）敏感。\r\n\r\n在[[log4j]]漏洞爆发的时候，由于攻击者尝试绕过 WAF，Cloudflare必须不断更新规则来匹配变种。此外，优化规则需要大量的人工干预，而且通常要在绕过被识别或甚至被利用后才能起作用，导致保护变得被动。\r\n\r\n为了解决这个问题，Cloudflare提供一个新工具，旨在无需人工干预的情况下识别绕过和恶意负载，以防其造成破坏。现在客户能够从一个机器学习模型中获取信号，这个模型根据托管规则和分类的善意/恶意流量和增强数据来训练，从而针对更大范围的新老攻击提供更佳的保护。\r\n\r\n# 2. 第一个自我学习的 WAF\r\n全新检测系统增强现有的托管规则集，提供三大优势：\r\n1.  适用于您的所有流量。系统会根据每个请求包含 SQLi 或 XSS 攻击等的可能性对其进行评分。这实现了一种全新的 WAF 分析体验，让您能够探索自己整体流量中的趋势和模式。\r\n2.  检测速率根据过去的流量和反馈而改善。托管规则集将所有 Cloudflare 流量分类为善意/恶意流量后，提供给该模型进行训练。这样一来，小型网站也能获得与大型网站同级的保护。\r\n3.  性能的新定义该机器学习模型在绕过和异常被利用或被人类研究人员识别前就将其识别出来。\r\n\r\n其中秘诀在于如下几方面的结合：创新的机器学习建模，庞大的训练数据集（基于我们每天阻止的攻击，以及数据增强技术），基于行为测试原则的正确评估和测试框架，以及让我们在几乎毫不增加延迟的前提下评估每一个请求的尖端工程技术。\r\n\r\n# 3. 新的 WAF 体验\r\n全新检测系统基于与[机器人分析（Bot Analytics）](https://blog.cloudflare.com/introducing-bot-analytics/) 一同发布的范式。根据这一方法，无论我们是否采取行动，都会对每个请求进行评估并赋分。由于我们对每一个请求赋分，针对发送到用户服务器的全部流量，用户能够看到分数如何随着时间变化。\r\n\r\n![3STXCU](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-01/3STXCU.jpg)\r\n\r\n此外，用户还可以查看请求的特定攻击手段（如SQLi的）评分直方图，并找到合适的评分值来区分善意流量和恶意流量。配置的规则如下图：\r\n\r\n![tVmqXg](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-01/tVmqXg.jpg)\r\n\r\n# 4. 工作原理\r\n\r\n基于机器学习的检测补充了现有的托管规则集，例如 OWASP 和 Cloudflare 托管规则。这套系统基于旨在没有研究人员或最终用户直接监督的情况下识别攻击模式变体或异常的模型。\r\n\r\n截至今日，Cloudflare已经公开两种攻击手段的分数：SQL 注入（SQLi）和跨站点脚本（XSS）。用户能根据三个单独的分数来创建自定义 WAF/防火墙规则：总分 （`cf.waf.ml.score`），SQLi 分数和 XSS 分数（分别为 `cf.waf.ml.score.sqli`，`cf.waf.ml.score.xss`,）。这些分数介于 1-99，其中 1 为绝对恶意，99 代表有效流量。\r\n\r\n![CSU2ZS](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-01/CSU2ZS.jpg)\r\n\r\n然后，我们使用现有 WAF 规则分类的流量对该模型进行训练，它对原始请求的一个变异版本有效，使其更容易识别攻击的指纹。\r\n\r\n对于每个请求，该模型对请求的每个部分独立评分，从而有可能识别恶意负载所在的位置，例如，在请求的正文、URI 或标头中。\r\n\r\n![EZsUM7](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-01/EZsUM7.jpg)\r\n\r\n这看起来很简单，但 Cloudflare 的工程师需要解决一系列挑战才能做到。其中包括：如何建立一个可靠的数据集，可扩展的数据标签，选择正确的模型架构，以及要求对 Cloudflare 全球网络处理的每一个请求（每秒 3200 万个）执行分类。\r\n\r\n# 5. 参考资料\r\n- [通过机器学习改善 WAF (cloudflare.com)](https://blog.cloudflare.com/zh-cn/waf-ml-zh-cn/)"},{"fields":{"slug":"/安全知识库/Blue Team基础设施/系统设计/系统设计基础知识/","title":"系统设计基础知识"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: 系统设计基础知识\r\ntags:\r\n- Blue Team基础设施\r\n- 系统设计\r\n- 安全架构\r\n---\r\n\r\n选择正确的架构 = 选择正确的战斗 + 管理权衡\r\n\r\n# 第一步：描述使用场景，约束和假设\r\n把所有需要的东西聚集在一起，审视问题。不停的提问，以至于我们可以明确使用场景和约束。讨论假设。\r\n\r\n- 谁会使用它？\r\n- 他们会怎样使用它？\r\n- 有多少用户？\r\n- 系统的作用是什么？\r\n- 系统的输入输出分别是什么？\r\n- 我们希望处理多少数据？\r\n- 我们希望每秒钟处理多少请求？\r\n- 我们希望的读写比率？\r\n\r\n# 第二步：创造一个高层级的设计\r\n使用所有重要的组件来描绘出一个高层级的设计。\r\n\r\n- 画出主要的组件和连接\r\n- 证明你的想法\r\n\r\n# 第三步：设计核心组件\r\n对每一个核心组件进行详细深入的分析。举例来说，如果你被问到[设计一个 url 缩写服务](https://github.com/donnemartin/system-design-primer/blob/master/solutions/system_design/pastebin/README.md)，开始讨论：\r\n\r\n生成并储存一个完整 url 的 hash\r\n\r\n- MD5 和 Base62\r\n- Hash 碰撞\r\n- SQL 还是 NoSQL\r\n- 数据库模型\r\n\r\n将一个 hashed url 翻译成完整的 url\r\n- 数据库查找\r\nAPI 和面向对象设计\r\n\r\n# 第四步：扩展设计\r\n确认和处理瓶颈以及一些限制。举例来说就是你需要下面的这些来完成扩展性的议题吗？\r\n- 负载均衡\r\n- 水平扩展\r\n- 缓存\r\n- 数据库分片\r\n- 论述可能的解决办法和代价。每件事情需要取舍。可以使用[可扩展系统的设计原则](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E4%B8%BB%E9%A2%98%E7%9A%84%E7%B4%A2%E5%BC%95)来处理瓶颈。\r\n\r\n# 第五步：预估计算量\r\n你或许会被要求通过手算进行一些估算。[附录](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E9%99%84%E5%BD%95)涉及到的是下面的这些资源：\r\n- [使用预估计算量](http://highscalability.com/blog/2011/1/26/google-pro-tip-use-back-of-the-envelope-calculations-to-choo.html)\r\n- [2 的次方表](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#2-%E7%9A%84%E6%AC%A1%E6%96%B9%E8%A1%A8)\r\n- [每个程序员都应该知道的延迟数](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E6%AF%8F%E4%B8%AA%E7%A8%8B%E5%BA%8F%E5%91%98%E9%83%BD%E5%BA%94%E8%AF%A5%E7%9F%A5%E9%81%93%E7%9A%84%E5%BB%B6%E8%BF%9F%E6%95%B0)\r\n\r\n# 相关资源和延伸阅读\r\n- [怎样通过一个系统设计的面试](https://www.palantir.com/2011/10/how-to-rock-a-systems-design-interview/)\r\n- [系统设计的面试](http://www.hiredintech.com/system-design)\r\n- [系统架构与设计的面试简介](https://www.youtube.com/watch?v=ZgdS0EUmn70)\r\n- [https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md)"},{"fields":{"slug":"/安全知识库/Blue Team基础设施/网络基础设施/加密流量解决方案/","title":"加密流量解决方案"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: 加密流量解决方案\r\ntags:\r\n  - Blue Team基础设施\r\n  - 网络基础设施\r\n  - 加密流量\r\n  - 行业实践\r\n  - Palo Alto Networks\r\n  - Extrahop\r\n  - Gigamon\r\n  - Google\r\n---\r\n\r\n# 1. 基础知识\r\n**X.509 证书：** 证书在客户端和服务器之间建立信任以建立 SSL 连接，尝试对服务器进行身份验证（或对客户端进行身份验证的服务器）的客户端知道 X.509 证书的结构，因此知道如何从证书中的字段中提取有关服务器的标识信息，例如 FQDN 或 IP 地址（称为证书中的通用名称或CN）或颁发证书的组织、部门或用户的名称。证书颁发机构 (CA) 必须颁发所有证书。CA 验证客户端或服务器后，CA 颁发证书并使用私钥对其进行签名。\r\n\r\n# 2. [[Palo Alto Networks]] Solution\r\n**解密策略：** 防火墙必须在其证书信任列表 (CTL) 中拥有服务器根 CA 证书，并使用该根 CA 证书中包含的公钥来验证签名，然后防火墙提供一份由转发信任证书签名的服务器证书的副本，供客户端进行身份验证。\r\n- **Outbound SSL traffic：SSL Forward Proxy**\r\n  - 防火墙是内部客户端和外部服务器之间的中间人。防火墙使用证书将客户端透明地表示给服务器，并将服务器透明地表示给客户端，这样客户端就认为它是直接与服务器通信的（即使客户端会话是与防火墙进行的），服务器也相信它直接与客户端通信（即使服务器会话也与防火墙）。防火墙使用证书将自己建立为客户端-服务器会话的可信第三方（中间人）。\r\n  - ![dsbk1w](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2022-12/dsbk1w.jpg)\r\n- **Inbound SSL traffic：SSL Inbound Inspection**\r\n  - 为要执行 SSL 入站检查的每台服务器安装证书和私钥。您还必须在每个执行 SSL 入站检查的防火墙上安装公钥证书和私钥。防火墙执行 SSL 入站检查的方式取决于协商的密钥类型、Rivest、Shamir、Adleman (RSA) 或 Perfect Forward Secrecy ( PFS )。\r\n  - ![SNxlAy](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2022-12/SNxlAy.jpg)\r\n- **Tunneled SSH traffic：SSH Proxy**\r\n  - 在 SSH 代理配置中，防火墙位于客户端和服务器之间。SSH 代理使防火墙能够解密入站和出站 SSH 连接，并确保攻击者不会使用 SSH 对不需要的应用程序和内容进行隧道传输。SSH 解密不需要证书，防火墙在启动时会自动生成用于 SSH 解密的密钥。在启动过程中，防火墙会检查是否存在现有密钥。如果没有，防火墙会生成一个密钥。防火墙使用密钥解密防火墙上配置的所有虚拟系统的 SSH 会话和所有 SSH v2 会话。\r\n\r\n# 3. [[Extrahop]] Solution\r\n**TLS 1.3发展带来的问题：Perfect Forward Secrecy**\r\n- 以前版本的 TLS：使用静态DH密钥交换算法很容易解密。\r\n- TLS1.3(PFS) 使用 ECDHE(Elliptic Curve Diffie-Hellman Encryption 密钥协商算法，握手过程中客户端和服务端都需要临时生成椭圆曲线公私钥，这样即使会话密钥被泄露，也无法解密所有会话。\r\n解决方案：\r\n- **中间人劫持：** 串行方案，解密，分析，然后重新加密传输\r\n- **带外监控与解密：** 并行方案，流量镜像实现\r\n\r\n\r\n**ExtraHop Reveal(x)使用带外解密方案**\r\n- 数据获取：Reveal(x) 使用 Microsoft Azure vTAP 或 Amazon VPC 流量镜像来获取数据包。\r\n- 隐私保护：遵循HIPAA, PCI, SOX, GDPR等法案，客户需要自己选择要解密的流量。\r\n- TLS1.3方案：ExtraHop Reveal(x) 使用轻量级的agent获取每个会话的临时会话密钥，该agent需要安装要解密的每台服务器上；agent通过 PFS 加密通道将解密后的会话安全地传输到 ExtraHop Reveal(x) 设备，在那里它们被安全存储并且只有具有最高管理权限的用户才能访问。\r\n- ![wfT2AN](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2022-12/wfT2AN.jpg)\r\n\r\n# 4. [[Gigamon]] Solution\r\n![7UduQ4](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2022-12/7UduQ4.jpg)\r\n\r\n- **入站加密流量：** 证书托管\r\n- **出站加密流量：** 中间人劫持（本地信任CA）\r\n\r\n![DaE7NT](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2022-12/DaE7NT.jpg)\r\n\r\n# 5. [[Google]] Cloud IDS Solution\r\n\r\n刚上线不久，可能还未考虑到加密流量的情况\r\n\r\n![b9GRnf](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2022-12/b9GRnf.jpg)\r\n\r\n# 6. 参考资料\r\n\r\n- [https://docs.paloaltonetworks.com/pan-os/9-1/pan-os-admin/decryption/decryption-overview](https://docs.paloaltonetworks.com/pan-os/9-1/pan-os-admin/decryption/decryption-overview)\r\n- [https://www.extrahop.com/products/cloud/how-it-works](https://www.extrahop.com/products/cloud/how-it-works)\r\n- [http://blog.nsfocus.net/east-west-flow-sum](http://blog.nsfocus.net/east-west-flow-sum)"},{"fields":{"slug":"/安全知识库/Blue Team基础设施/网络基础设施/网络流量采集方案/","title":"网络流量采集方案"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: 网络流量采集方案\r\ntags:\r\n- Blue Team基础设施\r\n- 网络基础设施\r\n- 行业实践\r\n- Gigamon\r\n---\r\n\r\n# 1. 基础知识\r\n两种最常见的网络流量采集方法是网络分路器(TAPs) 和交换机端口镜像(SPANs):\r\n**1.1. 网络分路器(TAPs)**\r\n一种直接连接到网络基础设施的物理设备。 TAP 位于两个设备之间，而不是两个交换机或路由器之间；并行方案，通过拷贝流量副本进行监控，不影响原始网络通讯，这种技术确保任何大小的数据包都将被拷贝并且**不容易超载**。\r\n如下图所示，Web服务器和交换机之间的流量数据被TAP设备捕获拷贝(TxA:A->B, TxB:B->A)，大多数TAP设备分别复制两个方向的流量数据，并将它们发送到单独的监控端口（TxA和TxB）\r\n![qTtJbp](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2022-12/qTtJbp.jpg)\r\n\r\n**1.2. 交换机端口镜像(SPANs)**\r\nSPAN 端口（有时称为镜像端口）是一种内置于交换机或路由器的软件功能，可拷贝通过设备的选定流量数据包的副本，并将它们发送到指定的 SPAN 端口。 由于交换机或路由器的主要目的是转发生产数据包，因此 SPAN 数据在设备上的优先级较低，SPAN 还使用单个出口端口来聚合多个链路，因此**很容易超载**。SPAN 最适合在未安装 TAP 的位置对少量数据进行临时监控。（注：SPAN 仍然是访问某些类型数据的唯一方式，例如在同一交换机上跨端口到端口的数据）\r\n\r\n![xKSTiK](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2022-12/xKSTiK.jpg)\r\n\r\n# 2. 东西向流量采集\r\n传统TAP和SPAN的方案在东西向流量采集有两个难点：**1、无法采集同一宿主机内的两台虚拟机之间的流量。2、封装了vxlan等隧道包头的数据流量无法识别**。\r\n\r\n业界主流的方案有（TAP/SPAN的基础上）：\r\n- SDN：通过SDN控制器的全网控制能力，实现东西向流量采集\r\n- API接口：通过调用云计算系统的标准引流API，实现东西向流量采集\r\n- 代理：非SDN网络下，添加一个引流的代理，实现东西向流量采集\r\n- Agent：通过在终端部署软件来实现东西向流量采集\r\n- vxlan：在虚机上做镜像，把流量通过vxlan导出去，送到一台支持vxlan终结的交换机上去，这台交换机把vxlan剥离后，送给旁挂的设备进行流量采集\r\n\r\n# 3. Gigamon Solution\r\n- **无源TAP**\r\n  - 无源TAP是在其网络端口之间没有物理隔离的设备，它从网络的两个方向接收流量，以便在监视工具上看到100％的流量。无源TAP不需要任何电源，增加了一层冗余，几乎不需要维护，并减少了总费用。\r\n- **有源TAP**\r\n  - 有源TAP在网络端口之间具有物理隔离。因此，它们需要一种故障安全机制，以确保在TAP断电时网络保持可操作状态；**有源TAP通常在下面的场景使用（无源TAP不适用）**：\r\n    1. Locations where the light levels are too low to use a splitter → regeneration provides a viable solution\r\n    2. Copper infrastructures → where electricity is used to move electrons (instead of photons)\r\n    3. Signal conversions → since an active TAP regenerates the signal anyway, it can also be designed to create a signal of a different type (such as 10Gb SR converted to 10Gb LR)\r\n    4. SFP-based links that cannot otherwise be broken (such as TwinAX cabling) → regeneration works here as well\r\n- **虚拟TAP**\r\n  - 用于网络功能虚拟化 (NFV) 以及私有和公共云基础架构，以访问托管环境中的东西向和南北向流量。\r\n  - ![hKxsTy](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2022-12/hKxsTy.jpg)\r\n\r\n# 4. 参考资料\r\n- [https://www.gigamon.com/resources/resource-library/white-paper/to-tap-or-to-span.html](https://www.gigamon.com/resources/resource-library/white-paper/to-tap-or-to-span.html)\r\n- [https://www.gigamon.com/resources/resource-library/white-paper/understanding-network-taps-first-step-to-visibility.html](https://www.gigamon.com/resources/resource-library/white-paper/understanding-network-taps-first-step-to-visibility.html)\r\n- [https://www.secrss.com/articles/12651](https://www.secrss.com/articles/12651)\r\n- [http://blog.nsfocus.net/east-west-flow-sum](http://blog.nsfocus.net/east-west-flow-sum)"},{"fields":{"slug":"/安全知识库/Blue Team能力建设/命令与控制 C2/DNS Tunnel隧道检测/","title":"DNS Tunnel隧道检测"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: DNS Tunnel隧道检测\r\ntags:\r\n- Blue Team能力建设\r\n- 命令与控制 C2\r\n- DNS\r\n---\r\n\r\n# 1. 阅读目录(Content)\r\n- DNS隧道简介\r\n  - DNS隧道木马分类\r\n    - IP直连型 DNS隧道木马\r\n    - 域名型 DNS隧道木马 - DNS迭代查询中继隧道\r\n    - IP直连型和域名解析型异同点\r\n- Powershell+dnscat2实现DNS隐蔽隧道反弹Shell\r\n  - C&C域名绑定\r\n  - 在C&C服务器上安装DNS C&C Server\r\n  - 部署客户端dnscat2 client\r\n  - 连接建立后，C&C控制端可以执行指令\r\n    - 获取shell\r\n    - 端口转发\r\n  - wireshark抓包分析\r\n    - UDP直连模式\r\n    - 域名解析模型\r\n- 可用于DNS tunnel的检测思路 - 基于UDP DNS会话\r\n  - DNS query type成分组成异常检测\r\n    - DNS Tunnel\r\n    - DNS FF Botnet\r\n    - DNS Query types Numbers\r\n  - 基于Zipf定律的异常检测 - Frequency Analysis\r\n  - DNS query/answer文本特征\r\n    - n-gram文本特征\r\n    - 基于CNN深度神经网络，从文本角度判断单条DNS query是否存在可疑Tunnel特征\r\n    - Query/Answer长度特征\r\n  - 基于会话聚类维度的DNS tunnel行为特征\r\n    - DNS会话时长\r\n    - DNS会话中数据包总数\r\n    - “上行大包”占请求报文总数的比例\r\n    - “下行小包”占响应报总数的比例\r\n    - 有效载荷的上传下载比\r\n    - 有效载荷部分是否加密\r\n    - 域名对应的主机名数量\r\n    - FQDN数异常检测\r\n    - 总的query 报文Payload载荷量\r\n  - 响应时间相关特征\r\n    - Response wait time特征\r\n  - 信息熵\r\n  - 发包频率行为\r\n- 可用于DNS tunnel的检测思路 - 基于DNS QUERY维度\r\n  - Network Features - 网络访问行为方面的特征\r\n    - 域名被访问频率角度特征\r\n    - TTL (last seen - first seen)\r\n    - window\r\n    - dns name change frequency\r\n  - Lexical Features\r\n    - 域名本身词频特征层面特征\r\n    - 域名的香侬熵\r\n    - 字符分布特征 -可读性/易读性方面的体现\r\n  - DNS session会话相关特征\r\n    - Number of IP subnetworks\r\n    - DNS对应的src_ip/dst_ip count相关特征\r\n    - DNS query type组成成分相关特征\r\n  - DNS域名相关meta信息\r\n    - whois-based features\r\n- 异常数据清洗\r\n  - 基线异常过滤思路\r\n  - 无监督异常abnormal检测算法\r\n\r\n# 2. 参考资料\r\n- [https://www.cnblogs.com/LittleHann/p/8656621.html](https://www.cnblogs.com/LittleHann/p/8656621.html)"},{"fields":{"slug":"/安全知识库/Blue Team能力建设/命令与控制 C2/基于统计学的C2流量检测/","title":"基于统计学的C2流量检测"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: 基于统计学的C2流量检测\r\ntags:\r\n- Blue Team能力建设\r\n- 命令与控制 C2\r\n- 流量检测\r\n---\r\n\r\n# 1. 基础统计学知识\r\n- 中位数\r\n  - 中位数是想要表示一个数据集中间位置的数据。\r\n    - `比如一组数字 (1, 1, 2, 2, 4, 6, 9) 的中位数为 2`\r\n\r\n- 绝对中位差\r\n  - 中位数是想要表示一个数据集中间位置的数据，那么每个数据与中位数的差值，反映了这些数据偏离中间位置的程度，在这个偏离程度中取中位数得到的就是绝对中位差。\r\n\r\n    ```\r\n      比如一组数字 (1, 1, 2, 2, 4, 6, 9) 的中位数为 2\r\n      这组数字相对于2的偏差为：(1, 1, 0, 0, 2, 4, 7)，中位数为 1\r\n      所以绝对中位差为 1\r\n    ```\r\n\r\n- 偏度\r\n  - 衡量随机变量概率分布的不对称性，是相对于平均值不对称程度的度量，通过对偏度系数的测量，我们能够判定数据分布的不对称程度以及方向。\r\n  - ![fv5E4Y](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-01/fv5E4Y.jpg)\r\n  - 偏度的衡量是相对于正态分布来说，正态分布的偏度为0，即若数据分布是对称的，偏度为0。若偏度大于0，则分布右偏（正偏度），即分布有一条长尾在右；若偏度小于0，则分布为左偏（负偏度），即分布有一条长尾在左（如上图）；同时偏度的绝对值越大，说明分布的偏移程度越严重。\r\n\r\n# 2. C2流量vs正常流量\r\n假设beacon的配置为：\r\n| Sleep时间 | jitter | 实际sleep时间 |\r\n| --------- | ------ | ------------- |\r\n| 300s      | 20%    | 240s~360s     |\r\n\r\n\t- 访问的时间间隔为240s-360s\r\n\r\n假设正常用户随机浏览相同网页\r\n- 访问的时间间隔为60s-600s\r\n- 基于上述的假设和统计学知识，可以画出图：\r\n  - ![gQKyp4](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-01/gQKyp4.jpg)\r\n- beacon中位数（Median）: 319\r\n- 正常用户中位数（Median）: 236\r\n- beacon绝对中位差（MAD）: 21\r\n- 正常用户绝对中位差（MAD）: 95\r\n\r\n可以得出结论：\r\n- **beacon：偏正态分布，绝对中位差比较小**\r\n- **正常用户：偏正/负偏度分布，绝对中位差比较大**\r\n\r\n参考RITA (Real Intelligence Threat Analytics)的算法，通过请求的时间间隔和数据包大小的统计信息，得出可疑的C2的请求:\r\n- 偏度\r\n- 绝对中位差\r\n- 频率\r\n\r\n实现的代码片段如下\r\n\r\n```go\r\n//计算偏度\r\n//store the diff slice length\r\ndiffLength := len(diff)\r\n\r\n//diffLength-1 is used since diff is a zero based slice\r\ntsLow := diff[util.Round(.25*float64(diffLength-1))]\r\ntsMid := diff[util.Round(.5*float64(diffLength-1))]\r\ntsHigh := diff[util.Round(.75*float64(diffLength-1))]\r\ntsBowleyNum := tsLow + tsHigh - 2*tsMid\r\ntsBowleyDen := tsHigh - tsLow\r\n\r\n//tsSkew should equal zero if the denominator equals zero\r\n//bowley skew is unreliable if Q2 = Q1 or Q2 = Q3\r\nif tsBowleyDen != 0 && tsMid != tsLow && tsMid != tsHigh {\r\n\ttsSkew = float64(tsBowleyNum) / float64(tsBowleyDen)\r\n}\r\n\r\n//计算绝对中位差\r\ntsMadm := devs[util.Round(.5*float64(diffLength-1))]\r\n\r\n//计算频率\r\nbucketDivs, freqList, freqCount, histScore := getTsHistogramScore(a.tsMin, a.tsMax, res.TsList)\r\n```\r\n\r\n# 3. 参考资料\r\n- [https://infosecjupyterthon.com/2021/sessions/day2-5-C2_Beaconing_Detection_using_Statistical_Analysis.html](https://infosecjupyterthon.com/2021/sessions/day2-5-C2_Beaconing_Detection_using_Statistical_Analysis.html)\r\n- [https://github.com/activecm/rita](https://github.com/activecm/rita)"},{"fields":{"slug":"/安全知识库/Blue Team能力建设/威胁检测规则/Elastic Rules/","title":"Elastic Rules"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: Elastic Rules\r\ntags:\r\n- Blue Team能力建设\r\n- 威胁检测规则\r\n- Elastic\r\n---\r\n\r\n# 1. 介绍\r\n内置100+检测规则可直接使用，如下图：\r\n![nDBkDF](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-01/nDBkDF.jpg)\r\n\r\n\r\n# 2. 案例\r\n检测计划任务（scheduled task）是否被创建\r\n\r\n- **Rule type**：EQL\r\n- **Rule indices**:\r\n  - winlogbeat-*\r\n  - logs-system.*\r\n- **Severity**：Low\r\n- **Risk score**：21\r\n- **Runs every**：5 min\r\n- **Searches indices from**：now-9m\r\n- **Maximum alerts per execution**：100\r\n- **References**：https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4698\r\n- **Potential false positives**：安装新软件时，也可能触发创建合法的计划任务\r\n- 规则：\r\n\r\n```\r\niam where event.action == \"scheduled-task-created\" and /* excluding \r\ntasks created by the computer account */ not user.name : \"*$\" and\r\n/* TaskContent is not parsed, exclude by full taskname noisy ones */\r\nnot winlog.event_data.TaskName : (\"\\\\OneDrive Standalone\r\nUpdate Task-S-1-5-21*\", \"\\\\Hewlett-Packard\\\\HP Web\r\nProducts Detection\", \"\\\\Hewlett-Packard\\\\HPDeviceCheck\")\r\n```\r\n\r\n- **Framework**: MITRE ATT&CKTM\r\n  - Tactic:\r\n    - Name: Persistence\r\n    - ID: TA0003\r\n    - Reference URL: [https://attack.mitre.org/tactics/TA0003/](https://attack.mitre.org/tactics/TA0003/)\r\n  - Technique:\r\n    - Name: Scheduled Task/Job\r\n    - ID: T1053\r\n    - Reference URL: [https://attack.mitre.org/techniques/T1053/](https://attack.mitre.org/techniques/T1053/)\r\n\r\n# 3. 参考资料\r\n- [https://www.elastic.co/guide/en/security/current/prebuilt-rules.html](https://www.elastic.co/guide/en/security/current/prebuilt-rules.html)"},{"fields":{"slug":"/安全知识库/Blue Team能力建设/威胁检测规则/SIGMA Rules/","title":"SIGMA Rules"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: SIGMA Rules\r\ntags:\r\n- Blue Team能力建设\r\n- 威胁检测规则\r\n- SIGMA\r\n---\r\n\r\n# 1. 介绍\r\n一种通用且开放的基于签名的规则格式，可以直接描述相关的日志事件。规则格式非常灵活，易于编写，适用于任何类型的日志文件。主要目的是提供一种结构化的形式，研究人员或分析人员可以在其中描述他们曾经开发的检测方法，并使其与他人共享。\r\n\r\nSigma支持主流的SIEM工具。它有以下优点：\r\n\r\n- 它使分析能够在组织之间重复使用和共享。\r\n- 高级通用分析语言\r\n- 解决记录签名问题等最可靠的方法\r\n- 纯文本YAML文件\r\n\r\n# 2. 相关Presentation\r\n[https://github.com/Neo23x0/Talks/blob/master/Sigma_Hall_of_Fame_20211022.pdf](https://github.com/Neo23x0/Talks/blob/master/Sigma_Hall_of_Fame_20211022.pdf)\r\n\r\n# 3. 举例：CVE-2009-3898的Sigma规则\r\n```\r\n  title: Suspicious PsExec Execution\r\n  id: c462f537-a1e3-41a6-b5fc-b2c2cef9bf82\r\n  description: detects execution of psexec or paexec with renamed service name, this rule helps to filter out the noise if psexec is used for legit purposes or if attacker\r\n      uses a different psexec client other than sysinternal one\r\n  author: Samir Bousseaden\r\n  date: 2019/04/03\r\n  references:\r\n      - https://blog.menasec.net/2019/02/threat-hunting-3-detecting-psexec.html\r\n  tags:\r\n      - attack.lateral_movement\r\n      - attack.t1077\r\n  logsource:\r\n      product: windows\r\n      service: security\r\n      description: 'The advanced audit policy setting \"Object Access > Audit Detailed File Share\" must be configured for Success/Failure'\r\n  detection:\r\n      selection1:\r\n          EventID: 5145\r\n          ShareName: \\\\*\\IPC$\r\n          RelativeTargetName:\r\n           - '*-stdin'\r\n           - '*-stdout'\r\n           - '*-stderr'\r\n      selection2:\r\n          EventID: 5145\r\n          ShareName: \\\\*\\IPC$\r\n          RelativeTargetName: 'PSEXESVC*'\r\n      condition: selection1 and not selection2\r\n  falsepositives:\r\n      - nothing observed so far\r\n  level: high\r\n```\r\n\r\n# 4. 项目地址\r\n- [https://github.com/SigmaHQ/sigma](https://github.com/SigmaHQ/sigma)"},{"fields":{"slug":"/安全知识库/Blue Team能力建设/威胁检测规则/Splunk Rules/","title":"Splunk Rules"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: Splunk Rules\r\ntags:\r\n- Blue Team能力建设\r\n- 威胁检测规则\r\n- Splunk\r\n---\r\n\r\n# 1. 介绍\r\nSplunk提供映射到ATT&CK/KILL CHAIN/CIS Controls TTPs相关的USE CASE和检测规则， 它们包括检测规则、搜索语法、机器学习算法和 Splunk Phantom 剧本——所有这些都旨在协同工作以检测、调查和响应威胁。\r\n\r\n# 2. 覆盖范围\r\n要查看使用ATT&CK标记的所有内容的最新检测覆盖图，请访问：[https://mitremap.splunkresearch.com](https://mitremap.splunkresearch.com) 包含目前检测覆盖范围的技术的快照。 蓝色的阴影越深，对这种特定技术的检测就越多；该地图在每次发布时自动更新，并从 generate-coverage-map.py 生成。\r\n\r\n# 3. 检测规则\r\n包含了终端、网络和云相关的200多种检测规则，示例如下:\r\n\r\n```\r\n  name: Eventvwr UAC Bypass\r\n  id: 9cf8fe08-7ad8-11eb-9819-acde48001122\r\n  version: 1\r\n  date: '2021-03-01'\r\n  author: Michael Haag, Splunk\r\n  type: TTP\r\n  datamodel:\r\n  - Endpoint\r\n  description: The following search identifies Eventvwr bypass by identifying the registry\r\n    modification into a specific path that eventvwr.msc looks to (but is not valid)\r\n    upon execution. A successful attack will include a suspicious command to be executed\r\n    upon eventvwr.msc loading. Upon triage, review the parallel processes that have\r\n    executed. Identify any additional registry modifications on the endpoint that may\r\n    look suspicious. Remediate as necessary.\r\n  search: '| tstats `security_content_summariesonly` count values(Registry.registry_key_name)\r\n    as registry_key_name values(Registry.registry_path) as registry_path min(_time)\r\n    as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where  Registry.registry_path=\"*mscfile\\\\shell\\\\open\\\\command\\\\*\"  by\r\n    Registry.user, Registry.dest , Registry.registry_value_name| `security_content_ctime(lastTime)`\r\n    | `security_content_ctime(firstTime)` | `drop_dm_object_name(Registry)` | `eventvwr_uac_bypass_filter`'\r\n  how_to_implement: To successfully implement this search you need to be ingesting information\r\n    on process that include the name of the process responsible for the changes from\r\n    your endpoints into the `Endpoint` datamodel in the `Registry` node.\r\n  known_false_positives: Some false positives may be present and will need to be filtered.\r\n  references:\r\n  - https://blog.malwarebytes.com/malwarebytes-news/2021/02/lazyscripter-from-empire-to-double-rat/\r\n  - https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1548.002/T1548.002.md\r\n  - https://attack.mitre.org/techniques/T1548/002\r\n  - https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/\r\n  tags:\r\n    analytic_story:\r\n    - Windows Defense Evasion Tactics\r\n    - IcedID\r\n    automated_detection_testing: passed\r\n    confidence: 100\r\n    context:\r\n    - Source:Endpoint\r\n    - Stage:Defense Evasion\r\n    dataset:\r\n    - https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1548.002/atomic_red_team/windows-sysmon.log\r\n    impact: 80\r\n    kill_chain_phases:\r\n    - Exploitation\r\n    - Privilege Escalation\r\n    message: Registry values were modified to bypass UAC using Event Viewer on $dest$\r\n      by $user$.\r\n    mitre_attack_id:\r\n    - T1548.002\r\n    - T1548\r\n    observable:\r\n    - name: user\r\n      type: User\r\n      role:\r\n      - Victim\r\n    - name: dest\r\n      type: Hostname\r\n      role:\r\n      - Victim\r\n    product:\r\n    - Splunk Enterprise\r\n    - Splunk Enterprise Security\r\n    - Splunk Cloud\r\n    required_fields:\r\n    - _time\r\n    - Registry.registry_key_name\r\n    - Registry.registry_path\r\n    - Registry.user\r\n    - Registry.dest\r\n    - Registry.registry_value_name\r\n    risk_score: 80\r\n    security_domain: endpoint\r\n```\r\n\r\n完整内容见：\r\n  - [https://github.com/splunk/security_content/tree/develop/detections](https://github.com/splunk/security_content/tree/develop/detections)\r\n\r\n# 4. USE CASEs\r\n- ProxyShell的示例如下:\r\n\r\n  ```\r\n    name: ProxyShell\r\n    id: 413bb68e-04e2-11ec-a835-acde48001122\r\n    version: 1\r\n    date: '2021-08-24'\r\n    author: Michael Haag, Teoderick Contreras, Mauricio Velazco, Splunk\r\n    type: batch\r\n    description: ProxyShell is a chain of exploits targeting on-premise Microsoft Exchange Server - CVE-2021-34473, CVE-2021-34523, and CVE-2021-31207.\r\n    narrative: 'During Pwn2Own April 2021, a security researcher demonstrated an attack chain targeting on-premise Microsoft Exchange Server. August 5th, the same researcher publicly released further details and demonstrated the attack chain. \\\r\n      1. CVE-2021-34473 - Pre-auth path confusion leads to ACL Bypass (Patched in April by KB5001779) \\\r\n      1. CVE-2021-34523 - Elevation of privilege on Exchange PowerShell backend (Patched in April by KB5001779) \\\r\n      1. CVE-2021-31207 - Post-auth Arbitrary-File-Write leads to RCE (Patched in May by KB5003435) \\\r\n      Upon successful exploitation, the remote attacker will have `SYSTEM` privileges on the Exchange Server. In addition to remote access/execution, the adversary may be able to run Exchange PowerShell Cmdlets to perform further actions.'\r\n    references:\r\n      - https://y4y.space/2021/08/12/my-steps-of-reproducing-proxyshell/\r\n      - https://www.zerodayinitiative.com/blog/2021/8/17/from-pwn2own-2021-a-new-attack-surface-on-microsoft-exchange-proxyshell\r\n      - https://www.youtube.com/watch?v=FC6iHw258RI\r\n      - https://www.huntress.com/blog/rapid-response-microsoft-exchange-servers-still-vulnerable-to-proxyshell-exploit#what-should-you-do\r\n      - https://i.blackhat.com/USA21/Wednesday-Handouts/us-21-ProxyLogon-Is-Just-The-Tip-Of-The-Iceberg-A-New-Attack-Surface-On-Microsoft-Exchange-Server.pdf\r\n    tags:\r\n      analytic_story:\r\n      - ProxyShell\r\n      category:\r\n      - Adversary Tactics\r\n      - Ransomware\r\n      product:\r\n      - Splunk Enterprise\r\n      - Splunk Enterprise Security\r\n      - Splunk Cloud\r\n      usecase: Advanced Threat Detection\r\n  ```\r\n\r\n# 5. 攻击样本数据 Attack Data Repository\r\n- 无需准备攻击环境/工具， 快速验证检测规则的覆盖和有效性。\r\n- 数据使用YML，格式如下：\r\n\r\n| 字段        | 描述             |\r\n| ----------- | ---------------- |\r\n| id          | 唯一标识UUID     |\r\n| name        | 作者名称         |\r\n| date        | 最后修改日期     |\r\n| dataset     | dataset关联URLs  |\r\n| description | 简介             |\r\n| environment | 运行环境         |\r\n| technique   | 对应的ATT&CK手法 |\r\n| references  | 参考信息         |\r\n| sourcetypes | 来源类型         |\r\n\r\n示例如下:\r\n\r\n```\r\nid: 405d5889-16c7-42e3-8865-1485d7a5b2b6\r\nauthor: Patrick Bareiss\r\ndate: '2020-10-08'\r\ndescription: 'Atomic Test Results: Successful Execution of test T1003.001-1 Windows\r\nCredential Editor Successful Execution of test T1003.001-2 Dump LSASS.exe Memory\r\nusing ProcDump Return value unclear for test T1003.001-3 Dump LSASS.exe Memory using\r\ncomsvcs.dll Successful Execution of test T1003.001-4 Dump LSASS.exe Memory using\r\ndirect system calls and API unhooking Return value unclear for test T1003.001-6\r\nOffline Credential Theft With Mimikatz Return value unclear for test T1003.001-7\r\nLSASS read with pypykatz '\r\nenvironment: attack_range\r\ntechnique:\r\n- T1003.001\r\ndataset:\r\n- https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1003.001/atomic_red_team/windows-powershell.log\r\n- https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1003.001/atomic_red_team/windows-security.log\r\n- https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1003.001/atomic_red_team/windows-sysmon.log\r\n- https://media.githubusercontent.com/media/splunk/attack_data/master/datasets/attack_techniques/T1003.001/atomic_red_team/windows-system.log\r\nreferences:\r\n- https://attack.mitre.org/techniques/T1003/001/\r\n- https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1003.001/T1003.001.md\r\n- https://github.com/splunk/security-content/blob/develop/tests/T1003_001.yml\r\nsourcetypes:\r\n- XmlWinEventLog:Microsoft-Windows-Sysmon/Operational\r\n- WinEventLog:Microsoft-Windows-PowerShell/Operational\r\n- WinEventLog:System\r\n- WinEventLog:Security\r\n```\r\n\r\n# 6. 参考资料\r\n- [https://github.com/splunk/attack_data](https://github.com/splunk/attack_data)"},{"fields":{"slug":"/安全知识库/Blue Team基础设施/终端基础设施/EDR商业化产品/CrowdStrike Falcon/","title":"CrowdStrike Falcon"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: CrowdStrike Falcon\r\ntags:\r\n- Blue Team基础设施\r\n- 终端基础设施\r\n- EDR商业化产品\r\n- CrowdStrike\r\n---\r\n\r\n# 1. CrowdStrike EDR 解决方案中最重要的是什么？\r\n![NsTQNy](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-01/NsTQNy.jpg)\r\n\r\n- **找到能够提供最高级别的保护同时需要最少的努力和投资的 EDR 安全解决方案非常重要**——在不耗尽资源的情况下为您的安全团队增加价值。以下是您应该寻找的 EDR 的六个关键方面：\r\n\r\n  - **可见度：**跨所有终端的实时可见性，从而可以检测发现攻击者活动，进而实施阻断。\r\n  - **威胁数据库：**EDR 需要从终端收集大量遥测数据并丰富上下文，因此可以使用各种分析技术挖掘攻击迹象。\r\n  - **行为保护：**仅依赖基于签名或IOC会导致检测能力被轻易绕过，从而导致数据泄露；EDR需要能通过行为来搜索攻击指标 (IOAs，crowdstrike发明的)，以便在发生危害之前收到可疑活动的告警。\r\n\r\n- TODO > 什么是攻击指标 Indicators of attack (IOA)？\r\n  攻击指标 (IOA)侧重于检测攻击者试图完成的目标的意图，而不管攻击中使用的恶意软件或漏洞。就像杀毒软件的签名一样，基于 IOC 的检测方法无法检测到0day攻击和免杀恶意软件。\r\n\r\n  >比如鱼叉攻击，必须欺骗目标点击链接或打开恶意文件/文档，一旦机器沦陷，攻击者将默默地执行另一个进程，隐藏在内存或磁盘中，并在系统重新启动后维持权限；然后与C2联系，等待进一步的指示。\r\n  >\r\n  >IOA 关注这些具体步骤的执行、对手的意图以及他试图实现的结果。IOA并不关注他用来实现目标的特定工具，而实监控关键行动，通过有状态执行检查引擎(Stateful Execution Inspection Engine)来收集和使用指标(indicators )，我们可以确定攻击者如何成功访问网络并推断其意图。\r\n\r\n  - **洞察力和智慧：**集成威胁情报的EDR解决方案可以提供上下文，包括攻击您的特定对手的详细信息或有关攻击的其他信息。\r\n  - **快速响应：**EDR能够对事件做出快速准确的响应，可以在攻击造成影响之前阻止攻击，并快速恢复业务。\r\n  - **基于云：**基于云的EDR解决方案可以降低对终端的影响，同时确保可以准确、实时地完成搜索、分析和调查等功能。\r\n\r\n# 2. CrowdStrike EDR 是如何工作的？\r\n- EDR解决方案的工作原理是提供对终端上发生事情的持续和全面的实时检测/监控。然后将行为分析和可操作的情报应用于终端数据，以阻止攻击告警演变为安全事件。功能包括：\r\n  - **1. 自动发现未知攻击者**\r\n    - Falcon Insight 将所有终端的遥测数据与IOA配对，并使用其行为来分析数十亿事件，自动检测可疑行为的痕迹；如果一系列事件和告警与已知 IOA匹配，agent将把该活动标记为恶意并自动发送告警；用户还可以编写自己的搜索条件，Falcon Insight的云架构可在5 秒或更短的时间内返回查询结果。\r\n  - **2. 与威胁情报集成**\r\n    - 可以更快地检测被识别为恶意的TTPs，并提供了上下文信息，其中包括相关的归因，提供有关攻击者的详细信息以及有关攻击的任何其他信息。\r\n  - **3. 主动防御，托管式威胁狩猎**\r\n    - 作为 Falcon 平台的一部分，Falcon OverWatch™ 托管威胁追踪服务增加了一个额外的保护能力，安全专家会帮助客户采取行动，以确保不会遗漏威胁，并最终防止发生大规模泄露。\r\n  - **4. 提供实时/历史的可见性**\r\n    - Falcon Insight就像终端上的 DVR，记录相关活动以捕捉尝试绕过检测的安全事件；Falcon agent跟踪了数百个不同的安全相关事件，例如进程创建、驱动程序加载、注册表修改、磁盘访问、内存访问或网络连接等，客户可以从安全角度全面了解其终端上发生的一切。\r\n    - 这为安全团队提供了他们需要的有用信息，包括：\r\n      - 内外与外部的网络连接\r\n      - 直接/远程登录的所有用户帐户\r\n      - ASP 密钥的变更、可执行文件和管理工具的使用\r\n      - 进程执行\r\n      - 详细的进程级别的网络活动，包括 DNS 请求、连接和开放端口\r\n      - 存档文件创建，包括 RAR 和 ZIPS\r\n      - USB等外部存储介质\r\n  - **5. 加速调查**\r\n    - 能够加快调查和最终修复的速度，因为从终端收集的信息通过Falcon 平台存储在 CrowdStrike 云中，使用了一个图形数据库来跟踪每个终端事件之间的所有关系和联系，该数据库可以快速、大规模地提供历史和实时数据的详细信息和上下文，这使安全团队能够有效地跟踪即使是最复杂的攻击，并及时发现事件，并对它们进行分类、验证和确定优先级，从而更快、更精确地进行补救。\r\n  - **6. 实现快速的修复**\r\n    - Falcon Insight 可以隔离终端，它允许组织通过将可能受到威胁的主机与所有网络活动隔离开来采取迅速和即时的行动。当终端受被隔离，它仍然可以从 CrowdStrike 云发送和接收信息，但即使与云的连接被切断，它仍将保持被隔离，并在重新启动期间保持这种隔离状态。\r\n    - **在应对新出现的威胁时，时间至关重要，响应者需要实时、深入的可见性，以便他们能够快速果断地进行补救。**\r\n    - **信息收集器**允许安全团队通过执行以下任务，以了解威胁的风险和范围：\r\n      - 浏览文件系统并提取文件\r\n      - 列出正在运行的进程\r\n      - 提取 Windows 事件日志\r\n      - 查询 Windows 注册表\r\n      - 列出当前的网络连接和配置\r\n      - 提取进程内存\r\n      - 计算文件哈希\r\n      - 收集环境变量\r\n      - 使用 PowerShell 或其他工具收集其他所需信息\r\n    - **补救措施**使团队能够迅速而果断地采取行动来遏制或补救威胁，包括：\r\n      - 删除文件\r\n      - 结束一个进程\r\n      - 删除或修改 Windows 注册表项或值\r\n      - 上传文件\r\n      - 运行脚本或可执行文件\r\n      - 加密文件\r\n      - 重启/关机\r\n- 借助 CrowdStrike 的云原生架构、轻量级agent和统一控制台，实时响应功能可以交付到世界上任何地方的任何系统，而对成本或性能的影响几乎为零。\r\n\r\n# 3. 参考资料\r\n- [https://www.crowdstrike.com/cybersecurity-101/indicators-of-compromise/ioa-vs-ioc/](https://www.crowdstrike.com/cybersecurity-101/indicators-of-compromise/ioa-vs-ioc/)\r\n- [https://www.crowdstrike.com/cybersecurity-101/endpoint-security/endpoint-detection-and-response-edr/](https://www.crowdstrike.com/cybersecurity-101/endpoint-security/endpoint-detection-and-response-edr/)"},{"fields":{"slug":"/安全知识库/Blue Team基础设施/终端基础设施/EDR/2021 EPP魔力象限 EPP Magic Quadrant/","title":"2021 EPP魔力象限 EPP Magic Quadrant"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: 2021 EPP魔力象限 EPP Magic Quadrant\r\ntags:\r\n- Blue Team基础设施\r\n- 终端基础设施\r\n- EDR\r\n---\r\n\r\n![https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-01/ZP3Qyi.jpg](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-01/ZP3Qyi.jpg)\r\n\r\n# 1. 市场趋势\r\n- 到 2023 年底，云交付的 EPP 解决方案将超过 95% 。\r\n- 到 2025 年，50% 使用 EDR 的组织将使用托管检测和响应功能（MDR）。\r\n- 到 2025 年，60% 的 EDR 解决方案将包含来自多个安全控制源的数据，例如身份认证、CASB 和 DLP。\r\n\r\n# 2. 市场定义/描述\r\n- Gartner对EPP市场的定义如下：EPP提供了将agent或sensor部署到托管终端（包括 PC、服务器和其他设备）的工具；这些旨在防止一系列已知和未知的恶意软件和威胁，并提供免受此类威胁的保护；此外，它们还提供调查和补救任何逃避保护控制的事件的能力。\r\n- EPP的核心功能是：\r\n  - 预防和保护安全威胁，包括使用基于文件和无文件漏洞的恶意软件。\r\n  - 将控制（允许/阻止）应用于软件、脚本和进程的能力 。\r\n  - 使用对设备活动、应用程序和用户数据的行为分析来检测和预防威胁的能力 。\r\n  - 当漏洞利用逃避保护控制时进一步调查事件和/或获得补救指导的设施 。\r\n- EPP中经常出现的可选功能可能包括：\r\n  - 终端设备的资产、配置和策略管理的收集和报告 。\r\n  - 磁盘加密、本地防火墙设置等操作系统安全控制状态的管理和报告 。\r\n  - 扫描系统漏洞和报告/管理安全补丁安装的设施 。\r\n  - 能够报告互联网、网络和应用程序活动，以获得潜在恶意活动的其他迹象 。\r\n\r\n# 3. 市场概览\r\n- 勒索软件目前是所有组织面临的最大风险。\r\n- 远程办公显著加速了基于云的解决方案落地（存量占60%，增量占95%）。\r\n- 无文件攻击已经非常普及，使得基于行为的检测防护成为EDR工具的关键能力。\r\n- 采用EDR工具的最大障碍仍然是操作它们所需的技能和增加的总成本。\r\n- 为了缩小技能差距，提供监控和警报分类的MDR服务正变得越来越流行。\r\n- SolarWinds供应链攻击说明了EDR的价值和缺点；EDR并没有实时检测到SolarWinds攻击，但在阻止新发现的恶意行为非常有用。\r\n- SolarWinds 攻击还表明需要至少更好地集成来自身份和电子邮件的遥测数据，以及需要有效的篡改保护以确保代理不被禁用。\r\n- XDR正在成为EPP解决方案的最新关键功能。\r\n- 所有组织都需要优先级更高的加固指导。\r\n- EPP解决方案还可以添加移动端的威胁防御和与统一终端管理的集成，以减少整体管理负担。\r\n\r\n# 4. 准入准出原则\r\n- 所有供应商必须至少提供以下12项：\r\n  - 无需更新规则即可防御。\r\n  - 可以根据进程行为检测恶意活动。\r\n  - 可以将IOC/IOA数据集中存储分析。\r\n  - 能够检测防御无文件恶意文件的攻击。\r\n  - 检测到恶意软件时自动删除恶意软件，删除/隔离文件/终止进程。\r\n  - 能够在控制台压制/忽略误报。\r\n  - EPP控制台必须是基于云的SaaS服务，由供应商管理维护。\r\n  - 控制台和报告能够显示完整的进程树，以识别进程是如何产生的，并进行可操作的根本原因分析。\r\n  - 需提供威胁狩猎能力，控制台提供跨终端的IOC/IOA（如文件哈希、源/目标 IP、注册表项）搜索。\r\n  - 能够识别恶意软件并给出修复步骤或者实现回滚。\r\n  - 提供选项将威胁情报集成到管理控制台中。\r\n  - 能够防护常见应用程序漏洞和内存利用攻击。\r\n  - 当终端设备位于公司网络之外时，必须继续收集可疑事件数据。\r\n  - 能对文件夹、驱动器或设备（例如 USB 驱动器）执行静态、按需恶意软件检测扫描。\r\n  - 所有功能都必须在单个agent/sensor中提供或直接集成到操作系统中。\r\n\r\n# 5. 参考资料\r\n- [https://www.gartner.com/doc/reprints?ct=210506&id=1-25Z4TEJM&st=sb](https://www.gartner.com/doc/reprints?ct=210506&id=1-25Z4TEJM&st=sb)"},{"fields":{"slug":"/安全知识库/Blue Team基础设施/终端基础设施/EDR/保障IDC安全：分布式HIDS集群架构设计/","title":"保障IDC安全：分布式HIDS集群架构设计"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: 保障IDC安全：分布式HIDS集群架构设计\r\ntags:\r\n- Blue Team基础设施\r\n- 终端基础设施\r\n- EDR\r\n---\r\n\r\n# 1. 转载自美团技术团队\r\n- [https://tech.meituan.com/2019/01/17/distributed-hids-cluster-architecture-design.html](https://tech.meituan.com/2019/01/17/distributed-hids-cluster-architecture-design.html)\r\n\r\n# 2. 背景\r\n近年来，互联网上安全事件频发，企业信息安全越来越受到重视，而IDC服务器安全又是纵深防御体系中的重要一环。保障IDC安全，常用的是基于主机型入侵检测系统Host-based Intrusion Detection System，即HIDS。在HIDS面对几十万台甚至上百万台规模的IDC环境时，系统架构该如何设计呢？复杂的服务器环境，网络环境，巨大的数据量给我们带来了哪些技术挑战呢？\r\n\r\n# 3. 需求描述\r\n对于HIDS产品，我们安全部门的产品经理提出了以下需求：\r\n\r\n- 满足50W-100W服务器量级的IDC规模。\r\n- 部署在高并发服务器生产环境，要求Agent低性能低损耗。\r\n- 广泛的部署兼容性。\r\n- 偏向应用层和用户态入侵检测（可以和内核态检测部分解耦）。\r\n- 针对利用主机Agent排查漏洞的最急需场景提供基本的能力，可以实现海量环境下快速查找系统漏洞。\r\n- Agent跟Server的配置下发通道安全。\r\n- 配置信息读取写入需要鉴权。\r\n- 配置变更历史记录。\r\n- Agent插件具备自更新功能。\r\n\r\n# 4. 分析需求\r\n  - 首先，服务器业务进程优先级高，HIDS Agent进程自己可以终止，但不能影响宿主机的主要业务，这是第一要点，那么业务需要具备熔断功能，并具备自我恢复能力。\r\n  - 其次，进程保活、维持心跳、实时获取新指令能力，百万台Agent的全量控制时间一定要短。举个极端的例子，当Agent出现紧急情况，需要全量停止时，那么全量停止的命令下发，需要在1-2分钟内完成，甚至30秒、20秒内完成。这些将会是很大的技术挑战。\r\n  - 还有对配置动态更新，日志级别控制，细分精确控制到每个Agent上的每个HIDS子进程，能自由地控制每个进程的启停，每个Agent的参数，也能精确的感知每台Agent的上线、下线情况。\r\n  - 同时，Agent本身是安全Agent，安全的因素也要考虑进去，包括通信通道的安全性，配置管理的安全性等等。\r\n  - 最后，服务端也要有一致性保障、可用性保障，对于大量Agent的管理，必须能实现任务分摊，并行处理任务，且保证数据的一致性。考虑到公司规模不断地扩大，业务不断地增多，特别是美团和大众点评合并后，面对的各种操作系统问题，产品还要具备良好的兼容性、可维护性等。\r\n  - 总结下来，产品架构要符合以下特性：\r\n    - 集群高可用。\r\n    - 分布式，去中心化。\r\n    - 配置一致性，配置多版本可追溯。\r\n    - 分治与汇总。\r\n    - 兼容部署各种Linux 服务器，只维护一个版本。\r\n    - 节省资源，占用较少的CPU、内存。\r\n    - 精确的熔断限流。\r\n    - 服务器数量规模达到百万级的集群负载能力。\r\n\r\n# 5. 技术难点：\r\n在列出产品需要实现的功能点、技术点后，再来分析下遇到的技术挑战，包括不限于以下几点：\r\n\r\n- 资源限制，较小的CPU、内存。\r\n- 五十万甚至一百万台服务器的Agent处理控制问题。\r\n- 量级大了后，集群控制带来的控制效率，响应延迟，数据一致性问题。\r\n- 量级大了后，数据传输对整个服务器内网带来的流量冲击问题。\r\n- 量级大了后，运行环境更复杂，Agent异常表现的感知问题。\r\n- 量级大了后，业务日志、程序运行日志的传输、存储问题，被监控业务访问量突增带来监控数据联突增，对内网带宽，存储集群的爆发压力问题。\r\n\r\n我们可以看到，技术难点几乎都是服务器到达一定量级带来的，对于大量的服务，集群分布式是业界常见的解决方案。\r\n\r\n# 6. 架构设计与技术选型\r\n对于管理Agent的服务端来说，要实现高可用、容灾设计，那么一定要做多机房部署，就一定会遇到数据一致性问题。那么数据的存储，就要考虑分布式存储组件。 分布式数据存储中，存在一个定理叫`CAP定理`：\r\n\r\n![lxjgAk](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-01/lxjgAk.jpg)\r\n\r\n**CAP的解释**:\r\n- 关于`CAP定理`，分为以下三点：\r\n  - 一致性（Consistency）：分布式数据库的数据保持一致。\r\n  - 可用性（Availability）：任何一个节点宕机，其他节点可以继续对外提供服务。\r\n  - 分区容错性（网络分区）Partition Tolerance：一个数据库所在的机器坏了，如硬盘坏了，数据丢失了，可以添加一台机器，然后从其他正常的机器把备份的数据同步过来。\r\n- 根据定理，分布式系统只能满足三项中的两项而不可能满足全部三项。理解CAP定理的最简单方式是想象两个节点分处分区两侧。允许至少一个节点更新状态会导致数据不一致，即丧失了Consistency。如果为了保证数据一致性，将分区一侧的节点设置为不可用，那么又丧失了Availability。除非两个节点可以互相通信，才能既保证Consistency又保证Availability，这又会导致丧失Partition Tolerance。\r\n- 参见：[CAP Theorem](https://en.wikipedia.org/wiki/CAP_theorem)\r\n\r\n**CAP的选择**:\r\n- 为了容灾上设计，集群节点的部署，会选择的异地多机房，所以 「Partition tolerance」是不可能避免的。那么可选的是 `AP` 与 `CP`。\r\n- 在HIDS集群的场景里，各个Agent对集群持续可用性没有非常强的要求，在短暂时间内，是可以出现异常，出现无法通讯的情况。但最终状态必须要一致，不能存在集群下发关停指令，而出现个别Agent不听从集群控制的情况出现。所以，我们需要一个满足 `CP` 的产品。\r\n\r\n# 7. 满足CP的产品选择\r\n  - 在开源社区中，比较出名的几款满足CP的产品，比如etcd、ZooKeeper、Consul等。我们需要根据几款产品的特点，根据我们需求来选择符合我们需求的产品。\r\n  - 插一句，网上很多人说Consul是AP产品，这是个错误的描述。既然Consul支持分布式部署，那么一定会出现「网络分区」的问题， 那么一定要支持「Partition tolerance」。另外，在consul的官网上自己也提到了这点 Consul uses a CP architecture, favoring consistency over availability.\r\n  \r\n    > Consul is opinionated in its usage while Serf is a more flexible and general purpose tool. In CAP terms, Consul uses a CP architecture, favoring consistency over availability. Serf is an AP system and sacrifices consistency for availability. This means Consul cannot operate if the central servers cannot form a quorum while Serf will continue to function under almost all circumstances.\r\n\r\n  - **etcd、ZooKeeper、Consul对比**\r\n\r\n    - 借用etcd官网上etcd与ZooKeeper和Consul的比较图。\r\n    - ![XotcyC](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-01/XotcyC.jpg)\r\n    - 在我们HIDS Agent的需求中，除了基本的`服务发现` 、`配置同步` 、`配置多版本控制` 、`变更通知`等基本需求外，我们还有基于产品安全性上的考虑，比如`传输通道加密`、`用户权限控制`、`角色管理`、`基于Key的权限设定`等，这点 `etcd` 比较符合我们要求。很多大型公司都在使用，比如`Kubernetes`、`AWS`、`OpenStack`、`Azure`、`Google Cloud`、`Huawei Cloud`等，并且`etcd`的社区支持非常好。基于这几点因素，我们选择etcd作为HIDS的分布式集群管理。\r\n\r\n# 8. 分布式HIDS集群架构图\r\n![c09vZx](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-01/c09vZx.jpg)\r\n\r\n# 9. 编程语言选择\r\n考虑到公司服务器量大，业务复杂，需求环境多变，操作系统可能包括各种Linux以及Windows等。为了保证系统的兼容性，我们选择了Golang作为开发语言，它具备以下特点：\r\n\r\n- 可以静态编译，直接通过syscall来运行，不依赖libc，兼容性高，可以在所有Linux上执行，部署便捷。\r\n- 静态编译语言，能将简单的错误在编译前就发现。\r\n- 具备良好的GC机制，占用系统资源少，开发成本低。\r\n- 容器化的很多产品都是Golang编写，比如Kubernetes、Docker等。\r\n- etcd项目也是Golang编写，类库、测试用例可以直接用，SDK支持快速。\r\n- 良好的CSP并发模型支持，高效的协程调度机制。\r\n\r\n# 10. 产品架构大方向\r\n  - HIDS产品研发完成后，部署的服务都运行着各种业务的服务器，业务的重要性排在第一，我们产品的功能排在后面。为此，确定了几个产品的大方向：\r\n    - 高可用，数据一致，可横向扩展。\r\n    - 容灾性好，能应对机房级的网络故障。\r\n    - 兼容性好，只维护一个版本的Agent。\r\n    - 依赖低，不依赖任何动态链接库。\r\n    - 侵入性低，不做Hook，不做系统类库更改。\r\n    - 熔断降级可靠，宁可自己挂掉，也不影响业务 。\r\n\r\n# 11. 框架设计\r\n![XMnpix](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-01/XMnpix.jpg)\r\n\r\n如上图，在框架的设计上，封装常用类库，抽象化定义`Interface`，剥离`etcd Client`，全局化`Logger`，抽象化App的启动、退出方法。使得各`模块`（以下简称`App`）只需要实现自己的业务即可，可以方便快捷的进行逻辑编写，无需关心底层实现、配置来源、重试次数、熔断方案等等。\r\n\r\n后面不再copy，感兴趣请参考原文"},{"fields":{"slug":"/安全知识库/Blue Team基础设施/终端基础设施/EDR能力评估/MITRE EDR技术能力评估/","title":"MITRE EDR技术能力评估"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: MITRE EDR技术能力评估\r\ntags:\r\n- Blue Team基础设施\r\n- 终端基础设施\r\n- EDR能力评估\r\n- 能力评估\r\n- MITRE\r\n---\r\n\r\n# 1. 背景\r\nMITRE每年会举办一次安全产品能力评估，通过ATT&CK和真实的APT案例进行攻击模拟，最大程度环境真实的攻击场景，整体过程分为以下三步：\r\n- **1. 设计阶段**\r\n  - 选择威胁（APT事件、恶意软件等）\r\n    - 意图： 考虑安全社区最关注的问题（例如，勒索软件与数据窃取）\r\n    - 差异化： 平衡使用新的和以前测试过的技术\r\n    - 复杂性： 考虑开发资源以及我们是在基线还是推动防御\r\n    - 情报： 我们评估情报的数量和质量以彻底了解对手\r\n  - 创建仿真计划\r\n    - 分解： 将网络威胁情报 (CTI) 提取到单独的程序中\r\n    - 链接： 将程序重新编译并组织成一个更大的仿真场景\r\n    - 细化： 我们通过合作和有针对性的研究填补空白\r\n  - 开发仿真\r\n    - 工具： 选择/构建可以真实还原行为的攻击性工具\r\n    - 定制： 捕捉重要的细节（例如，投递机制、C2等）\r\n    - 回顾： 与 CTI 进行比较并注意偏差\r\n    - 创建： 将所有信息编译成一个结构化的仿真计划\r\n- **2. 执行阶段**\r\n  - 访问环境\r\n    - 环境： 为所有厂商供提供相同的执行环境\r\n    - 噪音(仿真)： 除了模拟技术（例如键盘记录）所需的活动之外，还有用户活动\r\n  - 部署解决方案\r\n    - 解决方案： 厂商使用实际配置配置其解决方案\r\n    - 配置： 厂商确保预防、保护和响应仅用于检测评估，并自动用于保护评估\r\n    - * 注意：未经明确批准，禁止在评估开始后更改配置\r\n  - 执行评估\r\n    - 评估者：兼任攻击者和监考者，并提供检测指导以协助厂商\r\n    - 防守方： 厂商担任紫队的角色\r\n- **3. 发布**\r\n  - 处理结果\r\n    - 独特性： 独立考虑每个厂商\r\n    - 一致性： 校准所有结果以确保一致性\r\n  - 接收反馈\r\n    - 审核： 厂商有 10 天的时间提供反馈，其中可以包括要考虑纳入的其他数据，或对初步结果的修改\r\n    - 分析： 会考虑所有反馈并做出最终决定\r\n  - 发布结果\r\n    - 脱敏： 厂商对敏感性问题（例如规则逻辑）进行最终审查\r\n    - 发布： 公开发布结果和方法\r\n\r\n# 2. 2021年的评估模拟Carbanak + FIN7\r\n- 介绍\r\n  - **Carbanak 场景**： 合法用户执行通过针对金融机构的鱼叉式网络钓鱼攻击提供的恶意载荷。在拿到权限之后，Carbanak 通过特权升级、凭证访问和横向移动来扩展对其他主机的访问，目的是破坏货币处理服务、自动柜员机和金融账户。当 Carbanak 损害潜在有价值的目标时，他们会建立持久性，以便他们可以了解金融组织的内部程序和技术。使用这些信息，Carbanak 将资金转移到他们控制的银行账户，\r\n  - **FIN7 场景**：此场景模拟 FIN7 以酒店经理为目标，以获取信用卡信息。该场景开始于 FIN7 在不知情的用户执行恶意 .LNK 文件后实现对网络的初始访问权限。FIN7 然后转向特权 IT 管理员工作站。从这个系统，FIN7 键盘记录访问会计工作站所需的凭据。FIN7 然后转向会计工作站，建立持久性，并部署恶意软件从进程内存中抓取信用卡信息。\r\n- 操作流程\r\n  - ![65iZsu](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-01/65iZsu.jpg)\r\n- 技术范围\r\n  - 对于 Carbanak 和 FIN7 评估，11 种 ATT&CK 策略中的 65 种 ATT&CK 技术都在此评估范围内。这包括涵盖 Carbanak 评估的 Linux 部分的 7 种 ATT&CK 策略中的 12 种 ATT&CK 技术。\r\n  - 您可以通过查看我们在[此处](https://mitre-attack.github.io/attack-navigator/v2/enterprise/#layerURL=https://raw.githubusercontent.com/attackevals/website/master/downloadable_JSON/CarbanakFin7_Navigator_layer.json)提供的层文件，在 ATT&CK 导航器中查看 Carbanak+FIN7 评估的范围内技术。预览图如下！专门归因于 Carbanak 的范围内的技术以蓝色突出显示，专门归因于 FIN7 的技术以红色突出显示，而 Carbanak 和 FIN7 均以黄色突出显示。\r\n  - ![IxwRMn](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-01/IxwRMn.jpg)\r\n- 环境\r\n  - 评估是在 Microsoft Azure 中进行的。每个供应商都提供了两个相同的环境，由八台主机组成，每台主机都安装了他们的客户端软件。这两种环境分别用于仅检测和保护测试。\r\n  - ![9CiRAa](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-01/9CiRAa.jpg)\r\n\r\n# 3. 举例：CrowdStrike评估结果\r\n- 告警策略\r\n  - 攻击相关的指标都被分配了严重等级（信息、低、中、高、严重），同时还包含了丰富的上下文信息，如概述、对应的ATT&CK、进程、用户、主机及对应的资产信息等。此外，还使用CrowdScore（满分 10，结合攻击行为，跨进程、跨机器）来衡量当前攻击行为在客户环境的严重程度。\r\n- 其他策略\r\n  - ![xoqt1H](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-01/xoqt1H.jpg)\r\n\r\n# 4. 参考资料\r\n- [https://attackevals.mitre-engenuity.org/enterprise/participants/crowdstrike/results?adversary=carbanak_fin7&scenario=1#carbanak_fin7_test_11](https://attackevals.mitre-engenuity.org/enterprise/participants/crowdstrike/results?adversary=carbanak_fin7&scenario=1#carbanak_fin7_test_11)\r\n- [https://attackevals.mitre-engenuity.org/enterprise/carbanak_fin7](https://attackevals.mitre-engenuity.org/enterprise/carbanak_fin7)"},{"fields":{"slug":"/安全知识库/Blue Team基础设施/终端基础设施/EDR能力评估/Red Canary EDR买家指南/","title":"Red Canary EDR买家指南"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: Red Canary EDR买家指南\r\ntags:\r\n- Blue Team基础设施\r\n- 终端基础设施\r\n- EDR能力评估\r\n- Red Canary\r\n---\r\n\r\n# 1. 背景\r\nRed Canary 的技术团队一直在关注 EDR 市场，评估新技术，并已成功指导数以千计的组织进行 EDR 的评估和实施，本指南是在这个过程中自然而然产出的。在购买EDR前我们需要了解：\r\n\r\n- 公司的业务需求、技术要求和内部能力\r\n- EDR产品对公司安全运营带来的潜在影响\r\n- 用来区分EDR产品的关键因素是什么\r\n\r\n本指南重点介绍了每个安全团队在购买 EDR 产品之前需要回答的 14 个问题。\r\n\r\n# 2. 最重要的问题\r\n为什么要购买EDR产品?\r\n- 购买 EDR 产品的原因有很多，了解您的目标是关键第一步。\r\n\r\n**业务侧重点**\r\n- 使用该解决方案需要什么水平的专业知识和时间投入？\r\n  - ![9P2IbH](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-01/9P2IbH.jpg)\r\n  - 厂商提供的解决方案：MDR和MSSP。\r\n- 部署时对业务有什么影响？\r\n  - EDR 解决方案应该可以使用任何本机或第三方部署实用程序轻松部署到终端。 需要重启的解决方案可能会产生重大的业务影响，并需要更多的组织协调。\r\n- 能否取代现有的终端安全方案？\r\n  - 今天的许多 EDR 解决方案并不直接取代常见的安全方案，而是专注于加强安全态势的特定部分；常见的现有终端安全方案有：\r\n    - 杀毒软件、DLP、FIM、HIDS、UBA等。\r\n\r\n**技术能力**\r\n- 支持哪些平台和操作系统？\r\n  - 理想情况下，单一解决方案将适用于服务器、PC、笔记本电脑和其他终端。\r\n- 提供什么级别的可见性？\r\n  - 如果 EDR 缺乏对数据的收集，则它的价值有限； 把它想象成一个物理安全系统：光学安全摄像头远不如能同时收集 X 射线、红外线和振动数据的摄像头。\r\n  - 常见的数据包含：进程信息、网络连接、文件修改记录、注册表记录、二进制文件、内容、用户信息等。\r\n- 如何与预防措施相结合？\r\n  - EDR 解决方案越来越多地成为终端保护平台的一部分，而不是独立的工具。 选择具有“多合一”的解决方案非常重要。\r\n- 如何检测面临的威胁？\r\n  - 了解 EDR 解决方案检测到的威胁类型以及使用的技术和技巧应该是评估的核心。 许多解决方案采用非常有限的检测方法，并且无法提供更广泛的威胁覆盖范围。\r\n  - 包含：覆盖范围、误报率、漏报率、响应时间、有效性等。\r\n- 提供什么样的响应处置能力？\r\n  - 需要能够立即对威胁做出反应并在它对您的组织造成更大损害之前阻止它。\r\n- 有哪些类型的报告可用？\r\n  - EDR 解决方案提供的报告对于获得的价值至关重要；这适用于随每个威胁检测提供的报告以及有关终端和企业的摘要报告。\r\n\r\n**安全能力整合**\r\n- 是否与其他安全工具集成/联动？\r\n  - 将 EDR 深度集成到现有的安全能力和 IT 工具，能够最有效地从解决方案中获得最大价值。\r\n- 对终端会造成什么影响?\r\n  - 几乎所有 EDR 解决方案都通过Agent方式部署到终端，这意味着如果它没有经过良好的设计和测试，可能会产生严重的性能影响并导致不稳定。 应该提供在类似操作系统和硬件上测试的性能数据，以及在运行类似应用程序时的性能数据。\r\n- 使用哪些安全控制来保护自己免受攻击者的攻击？\r\n  - 如果设计不当，EDR 解决方案可能会带来巨大的安全风险；确保EDR自身都有严格的安全策略，并经过第三方测试。\r\n- 厂商提供哪些支持？\r\n  - 厂商提供的技术支持将极大地影响潜在成本以及部署、排除故障和优化 EDR 解决方案的能力。\r\n\r\n# 3. 参考资料\r\n- [https://docs.google.com/viewerng/viewer?url=https://resource.redcanary.com/rs/003-YRU-314/images/EDR-Buyers-Guide-2020.pdf](https://docs.google.com/viewerng/viewer?url=https://resource.redcanary.com/rs/003-YRU-314/images/EDR-Buyers-Guide-2020.pdf)"}]}}}