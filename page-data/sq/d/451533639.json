{"data":{"allMdx":{"nodes":[{"fields":{"slug":"/placeholder/","title":"This Is a Placeholder File for Mdx"},"frontmatter":{"draft":true},"rawBody":"---\ntitle: This Is a Placeholder File for Mdx\ndraft: true\ntags:\n  - gatsby-theme-primer-wiki-placeholder\n---\n"},{"fields":{"slug":"/getting-started/","title":"Getting Started"},"frontmatter":{"draft":false},"rawBody":"# Getting Started\r\n\r\nWelcome to your new foam workspace, let's get you started.\r\n\r\n> if you are already familiar with Foam and don't need help, just remove the `docs` folder for a clean repo.\r\n\r\nLet's go through this to set up your repo:\r\n\r\n- [ ] if you are new with VsCode, see how to [[get-started-with-vscode]] and how to [[use-keyboard-shortcuts-for-editing]]\r\n\r\n- [ ] you can navigate the links between your notes by `cmd+click` (or `ctrl+click` on Windows) on a wiki link. You can go back with `ctrl+-`. Here, go to your [[inbox]]\r\n\r\n- [ ] to see how your notes are connected, execute the `Foam: Show Graph` command. See [[graph-visualization]].\r\n\r\n- [ ] #tags can be used to further organize your content. Look at the `Tag Explorer` view on the left panel to find and navigate the tags in your knowledge base. See [[tags-and-tag-explorer]].\r\n\r\n- [ ] Foam supports [[spell-checking]].\r\n\r\n- [ ] You can also paste images in your Foam, just press `cmd+alt+v` to create the image file and link to it from your note. See [[paste-images-from-clipboard]].\r\n\r\n- [ ] You can use Foam for your daily notes, or journaling. Execute now the `Foam: Open Daily Note` command to create a new file in your `journal` folder. See [[daily-notes]].\r\n\r\n- [ ] Want to see how to manage your tasks? Go to the [[todo]] note\r\n\r\n- [ ] The section at the end of this file contains wikilink definitions, which enable navigation of your notes from GitHub's web UI, and in general to make `[[wikilinks]]` understood by any markdown parser. See [[link-reference-definitions]].\r\n\r\n- [ ] To explore all the Foam settings, press `cmd+,`, then `Extensions > Foam`\r\n\r\n- [ ] Living within VsCode, Foam can be customized in many ways! Look at the [Foam Recipes](https://foambubble.github.io/foam/recipes/recipes) for ideas!\r\n\r\n- [ ] Join the [Foam community on Discord](https://foambubble.github.io/join-discord/e), introduce yourself and leave a message on how you found Foam and how the onboarding went :) We are always keen to do better\r\n\r\n- [ ] Take the [Foam Welcome survey](http://foambubble.github.io/welcome-survey/e)! It helps us better understand your need and how we can make Foam better and better for you :)\r\n\r\n## Advanced Features\r\n\r\n- [ ] You can create [[note-templates]] for things like book reviews, people, daily notes (coming soon), and more!\r\n\r\n## About Foam\r\n\r\nFoam doesn't do all this magic on its own, it relies on some amazing extensions. Look at their documentation if you want to fully unlock the possibilities!\r\n\r\nHere they are:\r\n- [Markdown All In One](https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one)\r\n- [Markdown Notes](https://marketplace.visualstudio.com/items?itemName=kortina.vscode-markdown-notes)\r\n- [vscode-paste-image](https://github.com/mushanshitiancai/vscode-paste-image)\r\n- [spellright](https://marketplace.visualstudio.com/items?itemName=ban.spellright)\r\n\r\nA special mention goes to [Markdown Links](https://marketplace.visualstudio.com/items?itemName=tchayen.markdown-links), which has now been replaced by our graph but was foundational to Foam's beginnings.\r\n\r\n\r\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\r\n[get-started-with-vscode]: docs/how-to/get-started-with-vscode.md \"Getting started with VsCode\"\r\n[use-keyboard-shortcuts-for-editing]: docs/how-to/use-keyboard-shortcuts-for-editing.md \"Use Keyboard Shortcuts for Editing\"\r\n[inbox]: inbox.md \"Inbox\"\r\n[graph-visualization]: docs/features/graph-visualization.md \"Graph Visualization\"\r\n[tags-and-tag-explorer]: docs/features/tags-and-tag-explorer.md \"Tags and Tag Explorer\"\r\n[spell-checking]: docs/features/spell-checking.md \"Spell Checking\"\r\n[paste-images-from-clipboard]: docs/how-to/paste-images-from-clipboard.md \"Paste Images from Clipboard\"\r\n[daily-notes]: docs/features/daily-notes.md \"Daily Notes\"\r\n[todo]: todo.md \"Todo\"\r\n[link-reference-definitions]: docs/features/link-reference-definitions.md \"Link Reference Definitions\"\r\n[note-templates]: docs/features/note-templates.md \"Note Templates\"\r\n[//end]: # \"Autogenerated link references\""},{"fields":{"slug":"/inbox/","title":"Inbox"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: Inbox\r\ntags:\r\n    - Inbox\r\n---\r\n\r\n- Here you can write disorganised notes to be categorised later\r\n- Bullet points are useful, but it could be free form text as well\r\n- Sometimes it's better to just get things off your mind quickly, rather than stop to think where it belongs\r\n- But don't let this list get too long\r\n- Move information to more specific documents and link to them.\r\n  - This helps you navigate between documents quickly\r\n  - For example, you can `Cmd`+`Click` this: [[todo]]\r\n- Some notes don't end up making sense the next day\r\n- That's ok, you can just delete them!\r\n  - You can always find them in your git history, if you really need it!\r\n\r\n\r\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\r\n[todo]: todo.md \"Todo\"\r\n[//end]: # \"Autogenerated link references\""},{"fields":{"slug":"/","title":"Foam Template for Gatsby Theme Primer Wiki"},"frontmatter":{"draft":false},"rawBody":"---\r\ntags:\r\n  - Readme\r\n  - Getting-Started\r\n---\r\n\r\n# Foam Template for Gatsby Theme Primer Wiki\r\n\r\n**👋Another Foam template that use [gatsby-theme-primer-wiki](https://github.com/theowenyoung/gatsby-theme-primer-wiki), Welcome to your new Foam Knowledge Base!**\r\n\r\n## Examples\r\n\r\n- [Demo](https://demo-wiki.owenyoung.com) - ([Source](https://github.com/theowenyoung/gatsby-theme-primer-wiki/tree/main/example))\r\n- [Everything I Know by Owen](https://wiki.owenyoung.com/) - ([Source](https://github.com/theowenyoung/wiki))\r\n- [Foam Demo](https://demo-foam.owenyoung.com/) - ([Source](https://github.com/theowenyoung/foam-template-gatsby-theme-primer-wiki))\r\n- [Obsidian Demo](https://demo-obsidian.owenyoung.com/) - ([Source](https://github.com/theowenyoung/obsidian-template-gatsby-theme-primer-wiki))\r\n- [Gatsby Starter Demo](https://demo-gatsby-starter-primer-wiki.owenyoung.com/) - ([Source](https://github.com/theowenyoung/gatsby-starter-primer-wiki))\r\n\r\n## Features\r\n\r\n- Support Local search, full-text search.\r\n- Support Graph Visualisation with canvas.\r\n- Support Tags, Tags First, Generating tag pages, also connecting with graph visualisation.\r\n- Support [Gitbook](https://docs.gitbook.com/integrations/github/content-configuration#summary) styled `SUMMARY.md` for custom sidebar.\r\n- Support `[[WikiLink]]`, But you'd better use [Link Reference Definitions](https://foambubble.github.io/foam/features/link-reference-definitions) with extensions, `\"foam.edit.linkReferenceDefinitions\": \"withExtensions\"`\r\n- Support Light/Dark Theme\r\n- Custom Header Nav Items\r\n- Nested sidebar\r\n- Support Google Analytics\r\n- Support Sitemap/Robot\r\n- SEO optimization\r\n- Support path prefix\r\n\r\n## Principles\r\n\r\nHere are my main ideas/principles in designing this theme.\r\n\r\n1. No vendor lock-in. The less vendor features you use, the better you'll be able to migrate. `[[Wikilink]]` is the only non-markdown feature supported by default, but nonetheless, it is recommended to use the standard markdown syntax, or if you edit with [Foam](https://github.com/foambubble/foam), please use [Wikilink](https://foambubble.github.io/foam/wikilinks) with [Link Reference Definitions](https://foambubble.github.io/foam/features/link-reference-definitions). That give us the capability change our theme, or hosted place.\r\n2. Use meta data instead of special characters. We should use `tags` as the document's metadata, not `#tag` in the plain text.\r\n3. Use tags instead of categories. Minimal subfolders.\r\n\r\n## Getting started\r\n\r\n### For new wiki\r\n\r\nThis documentation assumes that you have a GitHub account and have [Visual Studio Code](https://code.visualstudio.com/) installed on your Linux/MacOS/Windows machine.\r\n\r\n1. If you haven't yet, browse over to the main [Foam documentation](https://foambubble.github.io/foam) to get an idea of what Foam is and how to use it.\r\n2. Press \"Use this template\" button at [foam-template-gatsby-theme-primer-wiki](https://github.com/theowenyoung/foam-template-gatsby-theme-primer-wiki/generate) (that's this repository!) to fork it to your own GitHub account. If you want to keep your thoughts to yourself, remember to set the repository private.\r\n3. [Clone the repository to your local machine](https://help.github.com/en/github/creating-cloning-and-archiving-repositories/cloning-a-repository) and open it in VS Code.\r\n\r\n   _Open the repository as a folder using the `File > Open...` menu item._\r\n\r\n4. When prompted to install recommended extensions, click **Install all** (or **Show Recommendations** if you want to review and install them one by one)\r\n5. Delete all `.md` files you don't need, Change Site settings at `.layouts/gatsby-config.js`, change your CNAME at `.layouts/static/CNAME`, change your icon at `.layouts/static/logo.png`, commit your changes, and push to github, change your page settings at Github, make sure you set the page branch to `gh-pages`, then when github actions runed, you can visit your site.\r\n\r\nAfter setting up the repository, head to [[getting-started]] to get familiar with your new knowledge base!\r\n\r\nTo learn more about how to use **Foam**, read the [Recipes](https://foambubble.github.io/foam/recipes/recipes) bubbles of the Foam documentation workspace.\r\n\r\nAnd remember that you can always join our [Foam community on Discord](https://foambubble.github.io/join-discord/g)!\r\n\r\n### For exist wiki\r\n\r\n### Exist Wiki\r\n\r\n1. Clone this repo to your local machine\r\n\r\n```bash\r\ngit clone https://github.com/theowenyoung/foam-template-gatsby-theme-primer-wiki.git\r\n```\r\n\r\n2. Copy `.layouts`, `.github` `.gitignore` to your wiki folder.\r\n\r\n## Config\r\n\r\nSee [here](https://github.com/theowenyoung/gatsby-theme-primer-wiki#usage)\r\n\r\n## Local Preview\r\n\r\n```bash\r\ncd .layouts\r\nnpm i\r\nnpm start\r\n```\r\n\r\n\r\n## Deploy\r\n\r\nDeploy to Github Pages, see `.github/workflows/deploy.yml`,\r\n\r\n### Path Prefix\r\n\r\nIf you want deploy your site with prefix path, \r\n\r\n1. change `gatsby-config.js` with:\r\n\r\n```javascript\r\nmodule.exports = {\r\n  pathPrefix: `/blog`,\r\n}\r\n```\r\n\r\n2. set your build script with `gatsby build --prefix-paths`,\r\n\r\n\r\n3. Local Preview with `gatsby serve --prefix-paths`\r\n\r\n\r\nAlso see the original docs: <https://www.gatsbyjs.com/docs/how-to/previews-deploys-hosting/path-prefix/#add-to-gatsby-configjs>\r\n\r\n## Using Foam\r\n\r\nWe've created a few Bubbles (markdown documents) to get you started.\r\n\r\n- [[inbox]] - a place to write down quick notes to be categorized later\r\n- [[getting-started]] - learn how to use your Foam workspace\r\n- [[todo]] - a place to keep track of things to do\r\n\r\nIn the `docs` directory you can find everything you need to learn the basics of Foam.\r\n\r\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\r\n[getting-started]: getting-started.md \"Getting Started\"\r\n[inbox]: inbox.md \"Inbox\"\r\n[getting-started]: getting-started.md \"Getting Started\"\r\n[todo]: todo.md \"Todo\"\r\n[//end]: # \"Autogenerated link references\"\r\n"},{"fields":{"slug":"/todo/","title":"Todo"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: Todo\r\ntags:\r\n    - Readme\r\n    - Todo\r\n---\r\nYou can create todos in Foam.\r\n\r\n- [x] This is an example of a todo list item that's complete\r\n- [ ] This one is not completed yet\r\n- [ ] You can mark it completed by pressing `Option`+`C` (or `Alt`+`C`) when your cursor is on this line\r\n  - [ ] You can also select multiple lines and mark them all at once!\r\n\r\n"},{"fields":{"slug":"/docs/Blue Team基础设施/2021 EPP魔力象限 EPP Magic Quadrant/","title":"2021 EPP魔力象限 EPP Magic Quadrant"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: 2021 EPP魔力象限 EPP Magic Quadrant\r\ntags:\r\n- Blue Team基础设施\r\n- 终端基础设施\r\n- EDR\r\n---\r\n\r\n![https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-01/ZP3Qyi.jpg](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2023-01/ZP3Qyi.jpg)\r\n\r\n# 1. 市场趋势\r\n- 到 2023 年底，云交付的 EPP 解决方案将超过 95% 。\r\n- 到 2025 年，50% 使用 EDR 的组织将使用托管检测和响应功能（MDR）。\r\n- 到 2025 年，60% 的 EDR 解决方案将包含来自多个安全控制源的数据，例如身份认证、CASB 和 DLP。\r\n\r\n# 2. 市场定义/描述\r\n- Gartner对EPP市场的定义如下：EPP提供了将agent或sensor部署到托管终端（包括 PC、服务器和其他设备）的工具；这些旨在防止一系列已知和未知的恶意软件和威胁，并提供免受此类威胁的保护；此外，它们还提供调查和补救任何逃避保护控制的事件的能力。\r\n- EPP的核心功能是：\r\n  - 预防和保护安全威胁，包括使用基于文件和无文件漏洞的恶意软件。\r\n  - 将控制（允许/阻止）应用于软件、脚本和进程的能力 。\r\n  - 使用对设备活动、应用程序和用户数据的行为分析来检测和预防威胁的能力 。\r\n  - 当漏洞利用逃避保护控制时进一步调查事件和/或获得补救指导的设施 。\r\n- EPP中经常出现的可选功能可能包括：\r\n  - 终端设备的资产、配置和策略管理的收集和报告 。\r\n  - 磁盘加密、本地防火墙设置等操作系统安全控制状态的管理和报告 。\r\n  - 扫描系统漏洞和报告/管理安全补丁安装的设施 。\r\n  - 能够报告互联网、网络和应用程序活动，以获得潜在恶意活动的其他迹象 。\r\n\r\n# 3. 市场概览\r\n- 勒索软件目前是所有组织面临的最大风险。\r\n- 远程办公显著加速了基于云的解决方案落地（存量占60%，增量占95%）。\r\n- 无文件攻击已经非常普及，使得基于行为的检测防护成为EDR工具的关键能力。\r\n- 采用EDR工具的最大障碍仍然是操作它们所需的技能和增加的总成本。\r\n- 为了缩小技能差距，提供监控和警报分类的MDR服务正变得越来越流行。\r\n- SolarWinds供应链攻击说明了EDR的价值和缺点；EDR并没有实时检测到SolarWinds攻击，但在阻止新发现的恶意行为非常有用。\r\n- SolarWinds 攻击还表明需要至少更好地集成来自身份和电子邮件的遥测数据，以及需要有效的篡改保护以确保代理不被禁用。\r\n- XDR正在成为EPP解决方案的最新关键功能。\r\n- 所有组织都需要优先级更高的加固指导。\r\n- EPP解决方案还可以添加移动端的威胁防御和与统一终端管理的集成，以减少整体管理负担。\r\n\r\n# 4. 准入准出原则\r\n- 所有供应商必须至少提供以下12项：\r\n  - 无需更新规则即可防御。\r\n  - 可以根据进程行为检测恶意活动。\r\n  - 可以将IOC/IOA数据集中存储分析。\r\n  - 能够检测防御无文件恶意文件的攻击。\r\n  - 检测到恶意软件时自动删除恶意软件，删除/隔离文件/终止进程。\r\n  - 能够在控制台压制/忽略误报。\r\n  - EPP控制台必须是基于云的SaaS服务，由供应商管理维护。\r\n  - 控制台和报告能够显示完整的进程树，以识别进程是如何产生的，并进行可操作的根本原因分析。\r\n  - 需提供威胁狩猎能力，控制台提供跨终端的IOC/IOA（如文件哈希、源/目标 IP、注册表项）搜索。\r\n  - 能够识别恶意软件并给出修复步骤或者实现回滚。\r\n  - 提供选项将威胁情报集成到管理控制台中。\r\n  - 能够防护常见应用程序漏洞和内存利用攻击。\r\n  - 当终端设备位于公司网络之外时，必须继续收集可疑事件数据。\r\n  - 能对文件夹、驱动器或设备（例如 USB 驱动器）执行静态、按需恶意软件检测扫描。\r\n  - 所有功能都必须在单个agent/sensor中提供或直接集成到操作系统中。\r\n\r\n# 5. 参考资料\r\n- [https://www.gartner.com/doc/reprints?ct=210506&id=1-25Z4TEJM&st=sb](https://www.gartner.com/doc/reprints?ct=210506&id=1-25Z4TEJM&st=sb)"},{"fields":{"slug":"/docs/Blue Team基础设施/EDR/","title":"EDR"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: EDR\r\ntags:\r\n- Blue Team基础设施\r\n- 终端基础设施\r\n---"},{"fields":{"slug":"/docs/Blue Team基础设施/加密流量解决方案/","title":"加密流量解决方案"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: 加密流量解决方案\r\ntags:\r\n  - Blue Team基础设施\r\n  - 网络基础设施\r\n  - 加密流量\r\n  - 行业实践\r\n  - Palo Alto Networks\r\n  - Extrahop\r\n  - Gigamon\r\n  - Google\r\n---\r\n\r\n# 1. 基础知识\r\n**X.509 证书：** 证书在客户端和服务器之间建立信任以建立 SSL 连接，尝试对服务器进行身份验证（或对客户端进行身份验证的服务器）的客户端知道 X.509 证书的结构，因此知道如何从证书中的字段中提取有关服务器的标识信息，例如 FQDN 或 IP 地址（称为证书中的通用名称或CN）或颁发证书的组织、部门或用户的名称。证书颁发机构 (CA) 必须颁发所有证书。CA 验证客户端或服务器后，CA 颁发证书并使用私钥对其进行签名。\r\n\r\n# 2. [[Palo Alto Networks]] Solution\r\n**解密策略：** 防火墙必须在其证书信任列表 (CTL) 中拥有服务器根 CA 证书，并使用该根 CA 证书中包含的公钥来验证签名，然后防火墙提供一份由转发信任证书签名的服务器证书的副本，供客户端进行身份验证。\r\n- **Outbound SSL traffic：SSL Forward Proxy**\r\n  - 防火墙是内部客户端和外部服务器之间的中间人。防火墙使用证书将客户端透明地表示给服务器，并将服务器透明地表示给客户端，这样客户端就认为它是直接与服务器通信的（即使客户端会话是与防火墙进行的），服务器也相信它直接与客户端通信（即使服务器会话也与防火墙）。防火墙使用证书将自己建立为客户端-服务器会话的可信第三方（中间人）。\r\n  - ![dsbk1w](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2022-12/dsbk1w.jpg)\r\n- **Inbound SSL traffic：SSL Inbound Inspection**\r\n  - 为要执行 SSL 入站检查的每台服务器安装证书和私钥。您还必须在每个执行 SSL 入站检查的防火墙上安装公钥证书和私钥。防火墙执行 SSL 入站检查的方式取决于协商的密钥类型、Rivest、Shamir、Adleman (RSA) 或 Perfect Forward Secrecy ( PFS )。\r\n  - ![SNxlAy](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2022-12/SNxlAy.jpg)\r\n- **Tunneled SSH traffic：SSH Proxy**\r\n  - 在 SSH 代理配置中，防火墙位于客户端和服务器之间。SSH 代理使防火墙能够解密入站和出站 SSH 连接，并确保攻击者不会使用 SSH 对不需要的应用程序和内容进行隧道传输。SSH 解密不需要证书，防火墙在启动时会自动生成用于 SSH 解密的密钥。在启动过程中，防火墙会检查是否存在现有密钥。如果没有，防火墙会生成一个密钥。防火墙使用密钥解密防火墙上配置的所有虚拟系统的 SSH 会话和所有 SSH v2 会话。\r\n\r\n# 3. [[Extrahop]] Solution\r\n**TLS 1.3发展带来的问题：Perfect Forward Secrecy**\r\n- 以前版本的 TLS：使用静态DH密钥交换算法很容易解密。\r\n- TLS1.3(PFS) 使用 ECDHE(Elliptic Curve Diffie-Hellman Encryption 密钥协商算法，握手过程中客户端和服务端都需要临时生成椭圆曲线公私钥，这样即使会话密钥被泄露，也无法解密所有会话。\r\n解决方案：\r\n- **中间人劫持：** 串行方案，解密，分析，然后重新加密传输\r\n- **带外监控与解密：** 并行方案，流量镜像实现\r\n\r\n\r\n**ExtraHop Reveal(x)使用带外解密方案**\r\n- 数据获取：Reveal(x) 使用 Microsoft Azure vTAP 或 Amazon VPC 流量镜像来获取数据包。\r\n- 隐私保护：遵循HIPAA, PCI, SOX, GDPR等法案，客户需要自己选择要解密的流量。\r\n- TLS1.3方案：ExtraHop Reveal(x) 使用轻量级的agent获取每个会话的临时会话密钥，该agent需要安装要解密的每台服务器上；agent通过 PFS 加密通道将解密后的会话安全地传输到 ExtraHop Reveal(x) 设备，在那里它们被安全存储并且只有具有最高管理权限的用户才能访问。\r\n- ![wfT2AN](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2022-12/wfT2AN.jpg)\r\n\r\n# 4. [[Gigamon]] Solution\r\n![7UduQ4](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2022-12/7UduQ4.jpg)\r\n\r\n- **入站加密流量：** 证书托管\r\n- **出站加密流量：** 中间人劫持（本地信任CA）\r\n\r\n![DaE7NT](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2022-12/DaE7NT.jpg)\r\n\r\n# 5. [[Google]] Cloud IDS Solution\r\n\r\n刚上线不久，可能还未考虑到加密流量的情况\r\n\r\n![b9GRnf](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2022-12/b9GRnf.jpg)\r\n\r\n# 6. 参考资料\r\n\r\n- [https://docs.paloaltonetworks.com/pan-os/9-1/pan-os-admin/decryption/decryption-overview](https://docs.paloaltonetworks.com/pan-os/9-1/pan-os-admin/decryption/decryption-overview)\r\n- [https://www.extrahop.com/products/cloud/how-it-works](https://www.extrahop.com/products/cloud/how-it-works)\r\n- [http://blog.nsfocus.net/east-west-flow-sum](http://blog.nsfocus.net/east-west-flow-sum)"},{"fields":{"slug":"/docs/Blue Team基础设施/终端基础设施/","title":"终端基础设施"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: 终端基础设施\r\ntags:\r\n- Blue Team基础设施\r\n---"},{"fields":{"slug":"/docs/Blue Team基础设施/网络基础设施/","title":"网络基础设施"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: 网络基础设施\r\ntags:\r\n- Blue Team基础设施\r\n---"},{"fields":{"slug":"/docs/Blue Team基础设施/网络流量采集方案/","title":"网络流量采集方案"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: 网络流量采集方案\r\ntags:\r\n- Blue Team基础设施\r\n- 网络基础设施\r\n- 行业实践\r\n- Gigamon\r\n---\r\n\r\n# 1. 基础知识\r\n两种最常见的网络流量采集方法是网络分路器(TAPs) 和交换机端口镜像(SPANs):\r\n**1.1. 网络分路器(TAPs)**\r\n一种直接连接到网络基础设施的物理设备。 TAP 位于两个设备之间，而不是两个交换机或路由器之间；并行方案，通过拷贝流量副本进行监控，不影响原始网络通讯，这种技术确保任何大小的数据包都将被拷贝并且**不容易超载**。\r\n如下图所示，Web服务器和交换机之间的流量数据被TAP设备捕获拷贝(TxA:A->B, TxB:B->A)，大多数TAP设备分别复制两个方向的流量数据，并将它们发送到单独的监控端口（TxA和TxB）\r\n![qTtJbp](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2022-12/qTtJbp.jpg)\r\n\r\n**1.2. 交换机端口镜像(SPANs)**\r\nSPAN 端口（有时称为镜像端口）是一种内置于交换机或路由器的软件功能，可拷贝通过设备的选定流量数据包的副本，并将它们发送到指定的 SPAN 端口。 由于交换机或路由器的主要目的是转发生产数据包，因此 SPAN 数据在设备上的优先级较低，SPAN 还使用单个出口端口来聚合多个链路，因此**很容易超载**。SPAN 最适合在未安装 TAP 的位置对少量数据进行临时监控。（注：SPAN 仍然是访问某些类型数据的唯一方式，例如在同一交换机上跨端口到端口的数据）\r\n\r\n![xKSTiK](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2022-12/xKSTiK.jpg)\r\n\r\n# 2. 东西向流量采集\r\n传统TAP和SPAN的方案在东西向流量采集有两个难点：**1、无法采集同一宿主机内的两台虚拟机之间的流量。2、封装了vxlan等隧道包头的数据流量无法识别**。\r\n\r\n业界主流的方案有（TAP/SPAN的基础上）：\r\n- SDN：通过SDN控制器的全网控制能力，实现东西向流量采集\r\n- API接口：通过调用云计算系统的标准引流API，实现东西向流量采集\r\n- 代理：非SDN网络下，添加一个引流的代理，实现东西向流量采集\r\n- Agent：通过在终端部署软件来实现东西向流量采集\r\n- vxlan：在虚机上做镜像，把流量通过vxlan导出去，送到一台支持vxlan终结的交换机上去，这台交换机把vxlan剥离后，送给旁挂的设备进行流量采集\r\n\r\n# 3. Gigamon Solution\r\n- **无源TAP**\r\n  - 无源TAP是在其网络端口之间没有物理隔离的设备，它从网络的两个方向接收流量，以便在监视工具上看到100％的流量。无源TAP不需要任何电源，增加了一层冗余，几乎不需要维护，并减少了总费用。\r\n- **有源TAP**\r\n  - 有源TAP在网络端口之间具有物理隔离。因此，它们需要一种故障安全机制，以确保在TAP断电时网络保持可操作状态；**有源TAP通常在下面的场景使用（无源TAP不适用）**：\r\n    1. Locations where the light levels are too low to use a splitter → regeneration provides a viable solution\r\n    2. Copper infrastructures → where electricity is used to move electrons (instead of photons)\r\n    3. Signal conversions → since an active TAP regenerates the signal anyway, it can also be designed to create a signal of a different type (such as 10Gb SR converted to 10Gb LR)\r\n    4. SFP-based links that cannot otherwise be broken (such as TwinAX cabling) → regeneration works here as well\r\n- **虚拟TAP**\r\n  - 用于网络功能虚拟化 (NFV) 以及私有和公共云基础架构，以访问托管环境中的东西向和南北向流量。\r\n  - ![hKxsTy](https://cdn.jsdelivr.net/gh/MarsAuthority/sec_pic@master/uPic/2022-12/hKxsTy.jpg)\r\n\r\n# 4. 参考资料\r\n- [https://www.gigamon.com/resources/resource-library/white-paper/to-tap-or-to-span.html](https://www.gigamon.com/resources/resource-library/white-paper/to-tap-or-to-span.html)\r\n- [https://www.gigamon.com/resources/resource-library/white-paper/understanding-network-taps-first-step-to-visibility.html](https://www.gigamon.com/resources/resource-library/white-paper/understanding-network-taps-first-step-to-visibility.html)\r\n- [https://www.secrss.com/articles/12651](https://www.secrss.com/articles/12651)\r\n- [http://blog.nsfocus.net/east-west-flow-sum](http://blog.nsfocus.net/east-west-flow-sum)"},{"fields":{"slug":"/docs/features/daily-notes/","title":"Daily Notes"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: Daily Notes\r\ntags:\r\n  - Notes\r\n  - Daily\r\n---\r\nDaily notes allow you to quickly create and access notes for today.\r\n\r\nTry it out, run the `Foam: Open Daily Note` command.\r\n\r\n## Shortcuts and Snippets\r\n\r\nYou can quickly open today's daily note by pressing `alt+d`.\r\nYou can also automatically open today's note via the `Foam › Open Daily Note: On Startup` setting.\r\n\r\nYou can also quickly create link to your daily notes, in the configured format, using [snippets](https://code.visualstudio.com/docs/editor/userdefinedsnippets).\r\n\r\nType `/today` and press `enter` to link to today's note.\r\nYou can also write:\r\n\r\n| Snippet      | Date          |\r\n| ------------ | ------------- |\r\n| `/tomorrow`  | tomorrow      |\r\n| `/yesterday` | yesterday     |\r\n| `/monday`    | next monday   |\r\n| `/+1d`       | tomorrow      |\r\n| `/-3d`       | 3 days ago    |\r\n| `/+1w`       | in a week     |\r\n| `/-1m`       | one month ago |\r\n| `/+1y`       | in one year   |\r\n\r\nYou get the idea ;)\r\n\r\n## Configuration\r\n\r\nIt's possible to customize path and heading of your daily notes, by following the [dateformat masking syntax](https://github.com/felixge/node-dateformat#mask-options).\r\nThe following properties can be used:\r\n```json\r\n  \"foam.openDailyNote.directory\": \"journal\",\r\n  \"foam.openDailyNote.filenameFormat\": \"'daily-note'-yyyy-mm-dd\",\r\n  \"foam.openDailyNote.fileExtension\": \"mdx\",\r\n  \"foam.openDailyNote.titleFormat\": \"'Journal Entry, ' dddd, mmmm d\",\r\n```\r\n\r\nThe above configuration would create a file `journal/daily-note-2020-07-25.mdx`, with the heading `Journal Entry, Sunday, July 25`.\r\n\r\n"},{"fields":{"slug":"/docs/features/graph-visualization/","title":"Graph Visualization"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: Graph Visualization\r\ntags:\r\n  - Graph\r\n---\r\n\r\nFoam comes with a graph visualization of your notes.\r\nTo see the graph execute the `Foam: Show Graph` command.\r\n\r\n## Graph Navigation\r\n\r\nWith the graph you can:\r\n- highlight a node by hovering on it, to quickly see how it's connected to the rest of your notes\r\n- select one or more (by keeping `shift` pressed while selecting) nodes by clicking on them, to better understand the structure of your notes\r\n- navigate to a note by clicking on it while pressing `ctrl` or `cmd`\r\n- automatically center the graph on the currently edited note, to immediately see its connections\r\n\r\n## Custom Graph Styles\r\n\r\nBy default the Foam graph will use the VsCode theme, but it's possible to customize it with the `foam.graph.style` setting.\r\n\r\nA sample configuration object is provided below, you can provide as many or as little configuration as you wish:\r\n\r\n```json\r\n\"foam.graph.style\": {\r\n    \"background\": \"#202020\",\r\n    \"fontSize\": 12,\r\n    \"highlightedForeground\": \"#f9c74f\",\r\n    \"node\": {\r\n        \"note\": \"#277da1\",\r\n        \"placeholder\": \"#545454\",\r\n        \"feature\": \"green\",\r\n    }\r\n}\r\n```\r\n\r\n- `note` defines the color for regular nodes\r\n- `placeholder` defines the color for links that don't match any existing note. This is a [[placeholder]] because no file with such name exists (see [[wiki-links]] for more info).\r\n- `feature` shows an example of how you can use note types to customize the graph. It defines the color for the notes of type `feature`\r\n  - see [[note-properties]] for details\r\n  - you can have as many types as you want\r\n\r\n\r\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\r\n[wiki-links]: wiki-links.md \"Wiki Links\"\r\n[note-properties]: note-properties.md \"Note Properties\"\r\n[//end]: # \"Autogenerated link references\""},{"fields":{"slug":"/docs/features/link-reference-definitions/","title":"Link Reference Definitions"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: Link Reference Definitions\r\ntags:\r\n  - Link\r\n---\r\n\r\nWhen you use `[[wiki-links]]`, the [foam-vscode](https://github.com/foambubble/foam/tree/master/packages/foam-vscode) extension can generate [Markdown Link Reference Definitions](https://spec.commonmark.org/0.29/#link-reference-definitions) at the bottom of the file.\r\n\r\nThis is done to make the content of the file compatible with various Markdown tools (e.g. parsers, static site generators, VS code plugins etc), which don't support `[[wiki-links]]` directly.\r\n\r\nThis feature is disabled by default because you don't need it to navigate your workspace, it is useful for publishing and compatibility of your notes.\r\n\r\n## Example\r\n\r\nThe following example:\r\n  ```md\r\n  - [[graph-visualization]]\r\n  ```\r\n...generates the following link reference definitions to the bottom of the file:\r\n  ```md\r\n  [graph-visualization]: graph-visualization \"Graph Visualization\"\r\n  ```\r\n\r\n## Configuration\r\n\r\nYou can use the `foam.edit.linkReferenceDefinitions` to configure the definitions (see [[get-started-with-vscode]]):\r\n- `withoutExtensions` (default): this works better with certain web publishing tools (e.g. GitHub pages)\r\n- `withExtensions`: this works better with standard markdown-based tools (e.g GitHub web UI)\r\n- `off`: this disables the generation of definitions\r\n\r\nAfter changing the setting in your workspace, you can run the `Foam: Run Janitor (Experimental)` command to convert all existing definitions.\r\n\r\n\r\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\r\n[get-started-with-vscode]: ../how-to/get-started-with-vscode.md \"Getting started with VsCode\"\r\n[//end]: # \"Autogenerated link references\""},{"fields":{"slug":"/docs/features/note-properties/","title":"Note Properties"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: Note Properties\r\ntype: feature\r\nkeywords: hello world\r\ntags:\r\n  - Properties\r\n---\r\n\r\n\r\n\r\nAt the top of the file you can have a section where you define your properties.\r\n\r\n> Be aware that this section needs to be at the very top of the file to be valid\r\n\r\nFor example, for this file, we have:\r\n```\r\n---\r\ntype: feature\r\nkeywords: hello world\r\n---\r\n```\r\n\r\nThose are properties.\r\nProperties can be used to organize your notes.\r\n\r\n## Special Properties\r\nSome properties have special meaning for Foam:\r\n- the `title` property will assign the name to the note that you will see in the graph, regardless of the filename or the first heading (also see how to [[write-notes-in-foam]])\r\n- the `type` property can be used to style notes differently in the graph (also see [[graph-visualization]])\r\n- the `tags` property can be used to add tags to a note (see [[tags-and-tag-explorer]])\r\n\r\n\r\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\r\n[write-notes-in-foam]: ../how-to/write-notes-in-foam.md \"Writing Notes\"\r\n[graph-visualization]: graph-visualization.md \"Graph Visualization\"\r\n[tags-and-tag-explorer]: tags-and-tag-explorer.md \"Tags and Tag Explorer\"\r\n[//end]: # \"Autogenerated link references\""},{"fields":{"slug":"/docs/features/note-templates/","title":"Note Templates"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: Note Templates\r\ntags:\r\n  - Templates\r\n---\r\n\r\n\r\nYou can create notes from templates by running the `Foam: Create New Note from Template` command and follow the instructions.\r\n\r\nTo create a template, just add regular `.md` files in `.foam/templates` (create the directory if necessary).\r\n\r\nTemplates can use all the variables available in [VsCode Snippets](https://code.visualstudio.com/docs/editor/userdefinedsnippets#_variables).\r\n\r\n"},{"fields":{"slug":"/docs/features/spell-checking/","title":"Spell Checking"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: Spell Checking\r\ntags:\r\n  - Templates\r\n---\r\n\r\nFoam comes with a spell checker.\r\n\r\nMisspelled words are highlighted, like hellow.\r\nYou can place the cursor on top of the word, and press `cmd+.` for suggestions on how to fix the problem.\r\n\r\nYou can configure the extension in the settings, for example to:\r\n- ignore certain files\r\n- change the language(s)\r\n- and much more\r\n\r\nFor more information go to the [Spellright extension page](https://marketplace.visualstudio.com/items?itemName=ban.spellright).\r\n\r\nThere are many spell checking extensions for VsCode.\r\nAnother one of our favorites is [LTeX](https://marketplace.visualstudio.com/items?itemName=valentjn.vscode-ltex&ssr=false#overview), which is a bit heavier but offers some extra functionality.\r\n"},{"fields":{"slug":"/docs/features/tags-and-tag-explorer/","title":"Tags and Tag Explorer"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: Tags and Tag Explorer\r\ntags: \r\n  - my-tag1\r\n  - my-tag2\r\n---\r\n\r\n\r\n## Tags\r\n\r\nYou can add tags to your notes to categorize them, or in any way you want.\r\n\r\nThere are two ways to add tags:\r\n- you can add #tags just by writing them in the note\r\n- another way is through [[note-properties]], as you can see at the top of this file\r\n\r\n## Tag Explorer\r\nIn the sidebar to the left, you will see a panel called `Tag Explorer`.\r\n\r\nYou can use this panel to see the tags in your notes, and navigate them.\r\n\r\nNotice `my-tag1` and `my-tag2`, which were added via [[note-properties]].\r\n\r\n\r\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\r\n[note-properties]: note-properties.md \"Note Properties\"\r\n[note-properties]: note-properties.md \"Note Properties\"\r\n[//end]: # \"Autogenerated link references\""},{"fields":{"slug":"/docs/features/wiki-links/","title":"Wiki Links"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: Wiki Links\r\ntags:\r\n  - Link\r\n---\r\n\r\nWiki links are the internal links that connect the files in your knowledge base.\r\n\r\nTo create a wiki link use `[[` and type the name of another file in your repo, for example [[graph-visualization]]\r\n\r\nYou can also create a [[placeholder]].\r\nA placeholder is a wiki link that doesn't have a target file and a link to a placeholder is styled differently so you can easily tell them apart.\r\nThey can still be helpful to highlight connections.\r\n\r\nOpen the graph with `Foam: Show Graph` command, and look at the placeholder node.\r\n\r\nRemember, with `CTRL/CMD+click` on a wikilink you can navigate to the note, or create it (if the link is a placeholder).\r\n\r\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\r\n[graph-visualization]: graph-visualization.md \"Graph Visualization\"\r\n[//end]: # \"Autogenerated link references\""},{"fields":{"slug":"/docs/how-to/get-started-with-vscode/","title":"Getting started with VsCode"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: Getting started with VsCode\r\ntags:\r\n  - How-to\r\n  - VsCode\r\n---\r\n\r\nVsCode is a powerful text editor, hidden behind a simple interface.\r\n\r\n## Keyboard shortcuts\r\nVsCode supports various **keyboard shortcuts**, the most important for us are:\r\n\r\n| Shortcut      | Action                       |\r\n| ------------- | ---------------------------- |\r\n| `cmd+N`       | create a new file            |\r\n| `cmd+S`       | save the current file        |\r\n| `cmd+O`       | open a file                  |\r\n| `cmd+P`       | use quickpick to open a file |\r\n| `cmd+shift+P` | invoke a command (see below) |\r\n\r\nFor more information, see the [vscode keyboard cheat sheets](https://code.visualstudio.com/docs/getstarted/keybindings#_keyboard-shortcuts-reference), where you can also see how to customize your keybindings.\r\n\r\n## Commands\r\nCommands make VsCode extremely powerful.\r\n\r\nTo invoke a command, press `cmd+shift+P` and select the command you want to execute.\r\nFor example, to see the Foam graph:\r\n- press `cmd+shift+P`\r\n- start typing `show graph`\r\n- select the `Foam: Show Graph` command\r\n\r\nAnd watch the magic unfold.\r\n\r\nFor more information on commands, see [commands on the VsCode site](https://code.visualstudio.com/docs/getstarted/userinterface#_command-palette).\r\n\r\n\r\nIf you want to learn more about VsCode, check out their [website](https://code.visualstudio.com/docs#first-steps).\r\n\r\n## Panels\r\n\r\nYou can see a few panels on the left, including:\r\n- `Outline`: this panel shows you the structure of the file based on the headings\r\n- `Tag Explorer`: This shows you the tags in your workspace, see [[tags-and-tag-explorer]] for more information on tags\r\n\r\n## Settings\r\n\r\nTo view or change the settings in VsCode, press `cmd+,`\r\n\r\n\r\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\r\n[tags-and-tag-explorer]: ../features/tags-and-tag-explorer.md \"Tags and Tag Explorer\"\r\n[//end]: # \"Autogenerated link references\""},{"fields":{"slug":"/docs/how-to/paste-images-from-clipboard/","title":"Paste Images from Clipboard"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: Paste Images from Clipboard\r\ntags:\r\n  - How-to\r\n  - VsCode\r\n---\r\n\r\n\r\nYou can paste an image from the clipboard with `cmd+alt+v`.\r\n\r\nImages are automatically copied to the `/attachments` folder and a reference is added in the file where you pasted them.\r\n\r\nA prompt will ask you to confirm the name of the image, to disable it set   `\"pasteImage.showFilePathConfirmInputBox\": false,` in the settings.\r\n\r\nTo change the location where the image is created, change the `pasteImage.path` property, e.g.:\r\n- `${currentFileDir}`: save the image next to the file\r\n- `${currentFileDir}/images`: create an `images` directory next to the file and save the image there\r\n\r\nFor more info check the [vscode-paste-image](https://github.com/mushanshitiancai/vscode-paste-image) extension page.\r\n"},{"fields":{"slug":"/docs/how-to/use-keyboard-shortcuts-for-editing/","title":"Use Keyboard Shortcuts for Editing"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: Use Keyboard Shortcuts for Editing\r\ntags:\r\n  - Shortcut\r\n---\r\n\r\n\r\nHere are some keyboard shortcuts you'll love when editing your notes.\r\n\r\nThis works best if you can see the result in the preview panel, run the `Markdown: Open Preview to the Side` command.\r\n\r\n- [ ] `alt+c` changes state to a TODO item. Try it while the cursor is on this line.\r\n\r\n---\r\n\r\n- [ ] `cmd+b` makes the selection bold. Select me and make me bold.\r\n\r\n---\r\n\r\n- [ ] `cmd+i` makes the selection italic. Select me and make me italic.\r\n\r\n---\r\n\r\n- [ ] `alt+shift+f` formats a table. Place the cursor in the table below and format the table.\r\n\r\n| column 1 | column 2|\r\n|-|-|\r\n| one element | another element|\r\n| second row| last cell|\r\n\r\n---\r\n\r\n- [ ] Paste link on selected text\r\n  1. copy the following text: https://google.com\r\n  2. select me and paste\r\n\r\n---\r\n\r\n- [ ] Search in your repo with `cmd+shift+f`: type \"search\"\r\n  - (go back to the file explorer with `cmd+shift+e`)\r\n\r\n---\r\n\r\n- [ ] Paste an image\r\n  1. copy an image\r\n  2. move your cursor to the next line, then press `cmd+alt+v` and confirm the name of the file\r\n  3. .\r\n  4. the image file has been created in `/attachments` and a reference to it has been added here\r\n"},{"fields":{"slug":"/docs/how-to/write-notes-in-foam/","title":"Writing Notes"},"frontmatter":{"draft":false},"rawBody":"---\r\ntitle: Writing Notes\r\ntags:\r\n  - Notes\r\n  - Writing\r\n---\r\n\r\nNotes are simple text files with some extra flavor, in the shape of Markdown syntax and support for extra properties (see [[note-properties]]).\r\n\r\n## Foam Syntax\r\n\r\nFoam uses standard markdown, with a few added twists:\r\n- the title of a note (e.g. in the [[graph-visualization]]) is given by precedence based on:\r\n  - the `title` property (see [[note-properties]])\r\n  - the first `# heading 1`  of the file\r\n  - the file name\r\n\r\n\r\n## Markdown Syntax\r\nWith markdown we can style our notes in a simple way, while keeping the document a simple text file (the best way to future-proof your writings!).\r\n\r\nYou can see the formatted output by running the `Markdown: Open Preview to the Side` command.\r\n\r\nHere is a high level overview of Markdown, for more information on the markdown syntax [see here](https://commonmark.org/help/).\r\n\r\nThis is a [link to google](https://www.google.com).\r\n\r\nThis is a wiki link (aka internal link) to [[note-properties]].\r\n\r\nHere is an image:\r\n![image](../../attachments/foam-icon.png)\r\n\r\n> this is a blockquote\r\n> it can span multiple lines\r\n\r\n- list item\r\n- list item\r\n- list item\r\n\r\n1. One\r\n2. Two\r\n3. Three\r\n\r\nThis text is **in bold** and this is *italic*.\r\n\r\nThe following is a horizontal rule\r\n\r\n---\r\n\r\nThis is a table:\r\n| Column 1 | Column 2 |\r\n| -------- | -------- |\r\n| R1C1     | R1C2     |\r\n| R2C1     | R2C2     |\r\n\r\nYou can `inline code` or\r\n```\r\nyou can create\r\ncode blocks\r\n```\r\n\r\n\r\n[//begin]: # \"Autogenerated link references for markdown compatibility\"\r\n[note-properties]: ../features/note-properties.md \"Note Properties\"\r\n[graph-visualization]: ../features/graph-visualization.md \"Graph Visualization\"\r\n[note-properties]: ../features/note-properties.md \"Note Properties\"\r\n[note-properties]: ../features/note-properties.md \"Note Properties\"\r\n[//end]: # \"Autogenerated link references\""}]}}}